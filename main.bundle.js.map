{"version":3,"sources":["webpack:///./src/app/game/_entity.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/game/entity.ts","webpack:///./src/app/game/game.ts","webpack:///./src/app/game/map.ts","webpack:///./src/app/game/player.ts","webpack:///./src/app/game/visibilitySprite.ts","webpack:///./src/app/game/weapon.ts","webpack:///./src/app/game/zombie.ts","webpack:///./src/app/loader/default-request-options.service.ts","webpack:///./src/app/loader/game.service.ts","webpack:///./src/app/phaser/delayedAnimation.ts","webpack:///./src/app/phaser/engine.ts","webpack:///./src/app/phaser/pool.ts","webpack:///./src/app/phaser/spawnable.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html"],"names":[],"mappings":";;;;;;;;AAAoD;AAKpD;IA8BI,iBAAY,MAAc,EAAE,QAAsB;QA7BlD,UAAK,GAAW,EAAE;QAUlB,SAAI,GAAG,mEAAU,CAAC,KAAK;QAIvB,YAAO,GAAkB,EAAE;QAgBvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;IAChC,CAAC;IAEM,4BAAU,GAAjB;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACM,8BAAY,GAAnB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,0BAAQ,GAAR;QACI,sBAAsB;IAC1B,CAAC;IAEO,8BAAY,GAApB;QACI,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,SAAS,GAAG,EAAE,EACvC,KAAK,GAAG,IAAI,CAAC,KAAK,EAClB,SAAS,GAAG,EAAE,CAAC;QACnB,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;gBACb,SAAS,GAAG,MAAM,GAAG,OAAO;YAChC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;gBACrB,SAAS,GAAG,MAAM,GAAG,MAAM;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,SAAS,GAAG,MAAM,GAAG,MAAM,CAAC;YAChC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;gBACb,SAAS,GAAG,MAAM,GAAG,OAAO;YAChC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;gBACrB,SAAS,GAAG,MAAM,GAAG,IAAI;YAC7B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,SAAS,GAAG,MAAM,GAAG,MAAM,CAAC;YAChC,CAAC;QACL,CAAC;QAED,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAC/C,CAAC;IAEO,iCAAe,GAAvB,UAAwB,cAA4B,EAAE,cAA4B;QAC9E,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QAEnH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAEjC,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEM,8BAAY,GAAnB;QACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEM,yBAAO,GAAd,UAAe,YAAoB,EAAE,MAAc;QAC/C,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEM,wBAAM,GAAb,UAAc,MAAc;QAExB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;QAErD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACM,sBAAI,GAAX,UAAY,cAA4B,EAAE,QAAoB;QAE1D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;QAEpD,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QAC5E,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IA3GM,eAAO,GAAW,CAAC;IA4G9B,cAAC;AAAD,CAAC;;;;;;;;ACpHD;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACL8C;AAC4B;AAE9B;AACY;AAExD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;ACXmB;AAClB;AAMjB;AAQpC;IAME,sBAA2B,UAAsB,EAAU,WAAwB;QAAxD,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAGjF,yCAAkB,GAAzB;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,2DAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAEO,8BAAO,GAAf;QACE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IAClB,CAAC;IAEO,0CAAmB,GAA3B;QACE,IAAI,gBAAgB,GAAsB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC;QAEnH,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC;QAC9B,gBAAgB,CAAC,MAAM,GAAG,GAAG,CAAC;QAE9B,MAAM,CAAC,gBAAgB,CAAC;IAC1B,CAAC;IACO,uCAAgB,GAAxB;QACE,IAAI,aAAa,GAAsB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC;QAE7G,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC;QAC3B,aAAa,CAAC,MAAM,GAAG,GAAG,CAAC;QAE3B,MAAM,CAAC,aAAa,CAAC;IACvB,CAAC;IAEO,gCAAS,GAAjB,UAAkB,SAA4B;QAC5C,IAAI,GAAG,GAA6B,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC/D,GAAG,CAAC,2BAA2B,GAAG,KAAK,CAAC;QACxC,GAAG,CAAC,wBAAwB,GAAG,KAAK,CAAC;QACrC,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IA7CH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,kCAAmC;YACnC,SAAS,EAAE,CAAC,4EAAW,CAAC;YACxB,kCAAkC;SACnC,CAAC;;oBAAA;IAyCF,mBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACvDwD;AACjB;AACI;AACW;AAC4B;AAErC;AAc9C;IAAA;IAAyB,CAAC;IAZ1B;QAAC,sFAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,iEAAU;aACX;YACD,SAAS,EAAE,CAAE,uGAAsB,CAAE;YACrC,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;;iBAAA;IACuB,gBAAC;AAAD,CAAC;;;;;;;;;;ACkB1B,IAAY,UAGX;AAHD,WAAY,UAAU;IAClB,6CAAK;IACL,+CAAM;AACV,CAAC,EAHW,UAAU,KAAV,UAAU,QAGrB;;;;;;;;;;;;;;ACzCuC;AAEA;AACF;AAEI;AAG1C,iCAAiC;AACjC,oBAAoB;AACpB,gDAAgD;AAChD,gDAAgD;AAChD,0BAA0B;AAC1B;IAiBI,cAAY,WAAwB;QAjBxC,iBAuQC;QA3PW,iBAAY,GAAW,CAAC,CAAC;QACzB,iBAAY,GAAW,CAAC,CAAC;QACzB,iBAAY,GAAW,CAAC,CAAC;QAI7B,IAAI,CAAC,GAAG,GAAG,IAAI,6DAAO,CAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,iEAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,WAAW,CAAC,CAAC;QAC1D,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAC5B,cAAI,IAAI,YAAI,CAAC,UAAU,EAAE,EAAjB,CAAiB,EACzB,eAAK,IAAI,cAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,EAAlC,CAAkC,EAC3C,cAAM,cAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAA1B,CAA0B,CAAC,CAAC;IAC1C,CAAC;IAEO,yBAAU,GAAlB;QAAA,iBAuCC;QAtCG,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,EACpB,cAAc,GAAG,UAAC,CAAC,IAAK,YAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAhB,CAAgB,EACxC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC3B,GAAG,CAAC,qBAAqB,EAAE,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,EAAU,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,EAAU,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,EAAU,CAAC;QAEtC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAErB,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvB,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAGzB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,MAAM,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAnB,CAAmB,CAAC,CAAC;QAC/C,MAAM,CAAC,QAAQ,CAAC,eAAK,IAAI,YAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAlB,CAAkB,EAAE,eAAK,IAAI,YAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAnB,CAAmB,CAAC,CAAC;IAE/E,CAAC;IAEO,0BAAW,GAAnB,UAAoB,CAAC,EAAE,CAAC;QACpB,IAAI,MAAM,GAAG,+DAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAChH,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAClC,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACO,wBAAS,GAAjB,UAAkB,CAAC,EAAE,CAAC;QAClB,IAAI,MAAM,GAAG,+DAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1H,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAClC,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEM,yBAAU,GAAjB;QACI,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QACnC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC;QACD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,GAAG,aAAa,CAAC,CAAC;QAC/E,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACtD,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IACM,4BAAa,GAApB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,MAAM,CAAC;QACX,CAAC;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzD,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAGM,uBAAQ,GAAf;QACI,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QAEvB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;QACvC,CAAC;QACD,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,yBAAyB;IAClB,uBAAQ,GAAf,UAAgB,MAAc;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtC,CAAC;IACL,CAAC;IAEO,2CAA4B,GAApC,UAAqC,MAAc;QAE/C,OAAO,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;QAC7C,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QACpC,OAAO,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;IACpD,CAAC;IAEO,oCAAqB,GAA7B;QAAA,iBAOC;QANG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,WAAC;YACrB,KAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACzC,CAAC,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,WAAC;YACrB,KAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACzC,CAAC,CAAC;IACN,CAAC;IACM,oCAAqB,GAA5B,UAA6B,MAAc;QACvC,MAAM,CAAC,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,aAAa,CAAC;IAChD,CAAC;IAEM,2BAAY,GAAnB,UAAoB,MAAc;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,SAAS,GAAG,MAAM,CAAC,CAAC;IACzD,CAAC;IACO,sBAAO,GAAf,UAAgB,MAAoB;QAApC,iBAWC;QAVG,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3D,MAAM;QACV,CAAC;QAED,qBAAqB;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACrB,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAnC,CAAmC,CAAC,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,EAArB,CAAqB,CAAC,CAAC;YAChI,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAC3C,CAAC;QACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9B,CAAC;IAIO,qBAAM,GAAd,UAAe,MAAoB;QAAnC,iBAeC;QAdG,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3D,MAAM;QACV,CAAC;QACD,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAE5B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC;YACnC,IAAI,MAAM,GAAwB,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAnC,CAAmC,CAAC,CAAC;YAC7G,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAChC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAExC,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QACvC,CAAC;IACL,CAAC;IAGO,sBAAO,GAAf,UAAgB,MAAoB;QAApC,iBAoCC;QAlCG,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3D,MAAM;QACV,CAAC;QACD,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAE/C,sBAAsB;QACtB,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,aAAa,CAAC,qBAAqB,GAAG,KAAK,CAAC;YACjD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,YAAY;YACZ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC5D,MAAM,CAAC;YACX,CAAC;YAGD,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,EACjD;gBACI,KAAI,CAAC,aAAa,CAAC,qBAAqB,GAAG,IAAI,CAAC;gBAChD,KAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;gBACpE,KAAI,CAAC,2BAA2B,EAAE,CAAC;gBACnC,KAAI,CAAC,UAAU,EAAE;gBACjB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACzB,CAAC,EAAE,UAAC,KAAK;gBACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAC5B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACzB,CAAC,CAAC,CAAC;YAEP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACxB,CAAC;IACL,CAAC;IAEO,4BAAa,GAArB;QAAA,iBAsBC;QApBG,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAC3C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,GAAG,cAAc,CAAC,CAAC;YAChF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAC5C;gBACI,OAAO,CAAC,OAAO,CAAC,KAAI,CAAC,aAAa,GAAG,GAAG,GAAG,KAAI,CAAC,aAAa,CAAC,EAAE,GAAG,cAAc,CAAC,CAAC;gBACnF,OAAO,CAAC,OAAO,CAAC,KAAI,CAAC,aAAa,GAAG,GAAG,GAAG,KAAI,CAAC,aAAa,CAAC,EAAE,GAAG,aAAa,CAAC,CAAC;gBAClF,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,GAAG,GAAG,GAAG,KAAI,CAAC,aAAa,CAAC,EAAE,GAAG,UAAU,CAAC,CAAC;gBAC5E,UAAU,CACN;oBACI,OAAO,CAAC,OAAO,CAAC,KAAI,CAAC,aAAa,GAAG,GAAG,GAAG,KAAI,CAAC,aAAa,CAAC,EAAE,GAAG,UAAU,CAAC,CAAC;oBAC/E,KAAI,CAAC,UAAU,EAAE,CAAC;gBACtB,CAAC,EAAE,GAAG,CAAC,CAAC;YAChB,CAAC,CACJ,CAAC;QACN,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,2BAA2B,EAAE,CAAC;gBACnC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,GAAG,aAAa,CAAC,CAAC;YACtF,CAAC;QACL,CAAC;IACL,CAAC;IAEO,0CAA2B,GAAnC;QACI,IAAI,CAAC,aAAa,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAChD,IAAI,CAAC,GAAG,CAAC,0BAA0B,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACjD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACjD,CAAC;IAED;;OAEG;IACK,kCAAmB,GAA3B,UAA4B,MAAc;QAA1C,iBASC;QARG,IAAI,SAAS,GAAwB,IAAI,KAAK,EAAE,CAAC;QACjD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,GAAG;YAC7B,IAAI,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAC5B,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAChC,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;IAC9C,CAAC;IACL,WAAC;AAAD,CAAC;;;;;;;;;;;;AClR0B;AAI3B,IAAM,QAAQ,GAAG,EAAE,CAAC;AAEpB;IAOI,iBAAoB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;QANxB,aAAQ,GAAkB,IAAI,KAAK,EAAE,CAAC;QAGvC,YAAO,GAAwB,IAAI,GAAG,EAAkB;QA0RxD,kBAAa,GAAW,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;IAvRhB,CAAC;IAErC,2BAAS,GAAT,UAAU,MAAc;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC;IACrC,CAAC;IAEM,oCAAkB,GAAzB,UAA0B,MAAc,EAAE,KAAe;QAAzD,iBAqCC;QApCG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,qBAAqB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC;QACX,CAAC;QACD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,sBAAsB,CAAC,CAAC;QACjD,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,EACtB,CAAC,GAAW,MAAM,CAAC,CAAC,EACpB,CAAC,GAAW,MAAM,CAAC,CAAC,EACpB,SAAS,GAAkB,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,EAC1E,cAAc,GAAkB,IAAI,KAAK,EAAE,CAAC;QAEhD,4EAA4E;QAE5E,SAAS,CAAC,OAAO,CAAC,uBAAa;YAC3B,IAAI,IAAI,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,aAAa,CAAC,EAChD,gBAAgB,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAExD,2DAA2D;YAC3D,EAAE,CAAC,CAAC,gBAAgB,IAAI,MAAM,CAAC,cAAc,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrE,MAAM,CAAC;YACX,CAAC;YAED,IAAI,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,UAAC,MAAM,EAAE,aAAa;gBACjD,oFAAoF;gBACpF,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC;oBAC9B,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAGD,MAAM,CAAC,MAAM,CAAC;YAClB,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACf,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACvC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,cAAc,GAAG,cAAc,CAAC;QACvC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,GAAG,sBAAsB,CAAC,CAAC;IACxD,CAAC;IAEO,kCAAgB,GAAxB,UAAyB,EAAE,EAAE,EAAE,EAAE,CAAC;QAC9B,mCAAmC;QACnC,8BAA8B;QAC9B,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAC9B,SAAS,GAAkB,IAAI,KAAK,EAAE,EACtC,UAAU,GAAwB,IAAI,GAAG,EAAE,EAC3C,cAAc,GAAkB,IAAI,KAAK,EAAE,EAC3C,IAAI,GAAG,IAAI,CAAC,IAAI,EAChB,SAAS,GAAG,IAAI,CAAC,SAAS,EAC1B,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAE3B,GAAG,CAAC;YACA,yBAAyB;YACzB,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACjC,yBAAyB;YACzB,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACjC,yBAAyB;YACzB,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACjC,yBAAyB;YACzB,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAEjC,CAAC,GAAG,GAAG,CAAC;YACR,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACT,YAAY;gBACZ,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnB,YAAY;gBACZ,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,CAAC;QACL,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QAEhB,UAAU,CAAC,OAAO,CAAC,WAAC,IAAI,qBAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAtB,CAAsB,CAAC,CAAC;QAChD,sCAAsC;QACtC,MAAM,CAAC,cAAc,CAAC;QAEtB,sBAAsB,CAAC,EAAE,CAAC;YACtB,IAAI,IAAI,GAAG,CAAC;YAGZ,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACT,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC;oBAC5B,gBAAgB,EAAE,CAAC;gBACvB,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC;oBAC5B,gBAAgB,EAAE,CAAC;gBACvB,CAAC;YACL,CAAC;YAED;gBACQ,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,EACpB,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAE9B,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClC,MAAM,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBAChC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC1C,CAAC;YACT,CAAC;QACL,CAAC;IACL,CAAC;IAID,wDAAwD;IACxD,kBAAkB;IACX,4CAA0B,GAAjC,UAAkC,MAAc;QAAhD,iBAcC;QAbG,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,EACtB,CAAC,GAAW,MAAM,CAAC,CAAC,EACpB,CAAC,GAAW,MAAM,CAAC,CAAC,EACpB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,EAC1C,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EACxD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,EAC1C,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EACzD,MAAM,GAAG,UAAC,CAAS;YACf,MAAM,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC5F,CAAC,CAAC;QAEN,IAAI,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,WAAC,IAAI,YAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC,CAAC,EAArC,CAAqC,CAAC,CAAC;QACtG,MAAM,CAAC,eAAe,CAAC;IAC3B,CAAC;IAEO,2BAAS,GAAjB,UAAkB,KAAK,EAAE,GAAG,EAAE,GAAG;QAC7B,MAAM,CAAC,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC;IACxC,CAAC;IAEO,uCAAqB,GAA7B,UAA8B,CAAS,EAAE,CAAS;QAC9C,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;QAErD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,MAAM,EAAE,aAAa;YAExC,qFAAqF;YACrF,EAAE,CAAC,CAAC,CAAC,CAAC,cAAc,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;gBACzC,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YACD,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC,EAAE,IAAI,CAAC,CAAC;IAEb,CAAC;IAED,uDAAuD;IAChD,+BAAa,GAApB,UAAqB,KAAa,EAAE,GAAW;QAC3C,IAAI,EAAE,GAAW,KAAK,CAAC,CAAC,EACpB,EAAE,GAAW,KAAK,CAAC,CAAC,EACpB,EAAE,GAAW,GAAG,CAAC,CAAC,EAClB,EAAE,GAAW,GAAG,CAAC,CAAC,EAClB,MAAM,GAAkB,IAAI,KAAK,EAAE,EACnC,KAAK,GAAY,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QAC3D,uDAAuD;QACvD,6DAA6D;QAC7D,qBAAqB;QAErB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,uBAAuB;YACvB,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;YACb,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;YACb,uBAAuB;YACvB,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;YACX,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAEf,CAAC;QACD,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YACV,uBAAuB;YACvB,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,EAAE,GAAG,EAAE,CAAC;YACR,EAAE,GAAG,KAAK;YACV,uBAAuB;YACvB,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,EAAE,GAAG,EAAE,CAAC;YACR,EAAE,GAAG,KAAK,CAAC;QACf,CAAC;QAED,IAAI,MAAM,GAAW,EAAE,GAAG,EAAE,EACxB,MAAM,GAAW,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,EAClC,KAAK,GAAW,CAAC,EACjB,KAAK,GAAW,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,EAChC,CAAC,GAAW,EAAE,CAAC;QAEnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5B,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;YAC/B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACR,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;gBACZ,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;YAChB,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;gBACZ,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;YAChB,CAAC;YACD,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;YAElC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACnC,KAAK,IAAI,MAAM,CAAC;YAChB,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC;gBACtB,CAAC,IAAI,KAAK,CAAC;gBACX,KAAK,IAAI,MAAM,CAAC;YACpB,CAAC;QACL,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAGM,uCAAqB,GAA5B;QAAA,iBAiCC;QAhCG,IAAI,OAAO,GAAmB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QAC9C,IAAI,CAAC,IAAI,GAAG;YACR,KAAK,EAAE,OAAO,CAAC,KAAK,GAAG,CAAC;YACxB,MAAM,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC;SAC7B;QAED,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;QACxB,6CAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,kBAAQ;YAC9B,IAAI,GAAG,GAAkB,IAAI,KAAK,EAAE,CAAC;YACrC,6CAAO,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,qBAAW;gBAChC,IAAI,YAAY,GAAiB,KAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,QAAQ,CAAC,EACzE,UAAU,GAAW,KAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,EAC3E,SAAS,GAAW,KAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAC9D,IAAI,GAAY,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;gBAC9D,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAErB,IAAI,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,QAAQ,CAAC;gBACvC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACzB,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE;wBAClB,MAAM,EAAE,IAAI;wBACZ,CAAC,EAAE,WAAW;wBACd,CAAC,EAAE,QAAQ;wBACX,KAAK,EAAE,SAAS;wBAChB,IAAI,EAAE,EAAE;wBACR,IAAI,EAAG,IAAI;qBACd,CAAC;gBACN,CAAC;YACL,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC,CAAC;QACF,uCAAuC;QACvC,kCAAkC;IACtC,CAAC;IAEM,kCAAgB,GAAvB,UAAwB,MAAc;QAElC,IAAI,QAAQ,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC;QAChC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC/B,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC/B,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAE7C,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC3C,CAAC;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAEpC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC;QAE7B,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QAE1D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;QAE1B,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEM,4CAA0B,GAAjC,UAAkC,MAAc;QAC5C,eAAe;QACf,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAC1C,IAAI,aAAa,GAAkB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC;QAE9H,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,YAAY,EAAE,aAAa,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC;QAC9F,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACjD,CAAC;IAEO,yCAAuB,GAA/B,UAAgC,MAAc,EAAE,MAA0B;QACtE,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;IAC5B,CAAC;IAIM,yCAAuB,GAA9B,UAA+B,MAAc,EAAE,IAAgB,EAAE,QAAoB,EAAE,KAAkB;QAErG,IAAI,IAAI,GAAG,IAAI,EACX,IAAI,GAAG,IAAI,CAAC,IAAI,EAChB,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC1D,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,4CAAM,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QAE3F,EAAE,CAAC,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC;YACxB,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC7B,MAAM,CAAC;QACX,CAAC;QACD,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,IAAI,EAAE,CAAC;QACP;YACI,IAAI,gBAAgB,GAAG,YAAY,CAAC,oBAAoB,CAAC,EACrD,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACpF,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;YACpD,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;YAEvB,kBAAkB;YAClB,EAAE,CAAC,CAAC,oBAAoB,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAClD,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE;oBACzB,IAAI,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;oBAC1D,MAAM,CAAC,YAAY,EAAE,CAAC;oBACtB,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC;oBAE3B,gEAAgE;oBAChE,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;oBAE7B,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBAEtD,EAAE,CAAC,CAAC,UAAU,KAAK,CAAC,IAAI,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;wBACvC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBAC7C,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;wBACxB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;oBAC/C,CAAC;oBAED,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;oBAC3C,QAAQ,EAAE,CAAC;gBACf,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;gBAE9C,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YAE9C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,oBAAoB,GAAG,oBAAoB,GAAG,CAAC,CAAC;gBAChD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC,GAAG,GAAG,GAAG,eAAe,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;gBACzF,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,cAAM,WAAI,EAAE,EAAN,CAAM,CAAC,CAAC;gBAG3C,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;YAClD,CAAC;QACL,CAAC;IAEL,CAAC;IAGM,qCAAmB,GAA1B,UAA2B,MAAc,EAAE,WAAyB;QAChE,IAAI,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EACjD,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;QACjE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;IAC3C,CAAC;IAEM,mCAAiB,GAAxB,UAAyB,MAAc,EAAE,WAAyB,EAAE,QAAoB,EAAE,KAAkB;QAA5G,iBAiDC;QAhDG,IAAI,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,EACrD,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EACjD,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAGrB,+EAA+E;QAC/E,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,YAAY,EAAE,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QAE3F,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YAChB,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC7B,MAAM,CAAC;QACX,CAAC;QACD,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAG7B,IAAI,IAAI,GAAG;YACP,IAAI,gBAAgB,GAAG,YAAY,CAAC,oBAAoB,CAAC,EACrD,eAAe,GAAG,KAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAC/E,MAAM,GAAG,KAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;YACpD,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;YACvB,EAAE,CAAC,CAAC,oBAAoB,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAClD,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE;oBACzB,MAAM,CAAC,YAAY,EAAE,CAAC;oBACtB,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC;oBAC3B,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;oBAE7B,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBAEtD,EAAE,CAAC,CAAC,UAAU,KAAK,CAAC,IAAI,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;wBACvC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBAC7C,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;wBACxB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;oBAC/C,CAAC;oBAED,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;oBAC3C,QAAQ,EAAE,CAAC;gBACf,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;YAClD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,oBAAoB,GAAG,oBAAoB,GAAG,CAAC,CAAC;gBAChD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC,GAAG,GAAG,GAAG,eAAe,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;gBACzF,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,cAAM,WAAI,EAAE,EAAN,CAAM,CAAC,CAAC;gBAG3C,KAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;YAClD,CAAC;QACL,CAAC;QACD,IAAI,EAAE,CAAC;IACX,CAAC;IAEM,yBAAO,GAAd;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IACM,yBAAO,GAAd;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IACM,kCAAgB,GAAvB,UAAwB,OAAe,EAAE,OAAe;QACpD,IAAI,KAAK,GAAiB,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;QAC7C,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;QACvD,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACM,2BAAS,GAAhB,UAAiB,CAAQ,EAAE,CAAQ;QAC/B,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAEjC,CAAC;IACM,kCAAgB,GAAvB,UAAwB,KAAmB;QAEvC,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAC7B,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EACjD,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE;gBAClB,MAAM,EAAE,IAAI;gBACZ,CAAC,EAAE,OAAO;gBACV,CAAC,EAAE,OAAO;gBACV,KAAK,EAAE,CAAC;gBACR,IAAI,EAAE,EAAE;gBACR,IAAI,EAAC,KAAK;aACb,CAAC;QACN,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAEO,6BAAW,GAAnB,UAAoB,KAAmB;QACnC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EACjD,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IACO,mCAAiB,GAAzB,UAA0B,CAAS,EAAE,CAAS;QAC1C,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACvB,CAAC;IAEM,2BAAS,GAAhB,UAAiB,KAAa,EAAE,GAAW,EAAE,KAAa,EAAE,WAAoB;QAC5E,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,WAAW,CAAC,EAC5C,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EACxC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAClC,MAAM,GAAG,IAAI,GAAG,EAAsB,EACtC,OAAO,GAAoB,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,EAClE,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAE5B,8DAA8D;QAC9D,IAAI,IAAI,GAAG,iDAAW,CAAC,OAAO,CAAC,GAAG,CAAC,WAAC,IAAM,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;QAE5F,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEO,kCAAgB,GAAxB,UAAyB,KAAa,EAAE,aAA4B,EAAE,KAAa;QAE/E,sGAAsG;QAF1G,iBA4EC;QAxEG,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAEjC,IAAI,IAAI,GAAG,IAAI,EACX,eAAe,GAAG,CAAC,EACnB,qBAAqB,GAAG,CAAC,EACzB,eAAe,GAAW,GAAG,EAC7B,iBAAiB,GAAG,CAAC,CAAC,EACtB,IAAI,GAAG,IAAI,CAAC,IAAI,EAChB,cAAc,GAAG,IAAI,GAAG,EAAsB,EAC9C,MAAM,GAAG,IAAI,GAAG,EAAsB,EACtC,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,EAC5B,wBAA8C,EAC9C,mBAAmB,CAAC;QAExB,eAAe;QACf,2BAA2B;QAE3B,wBAAwB,GAAG,aAAa;aACnC,IAAI,CAAC,UAAC,EAAE,EAAE,EAAE,IAAK,SAAE,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAA3C,CAA2C,CAAC;aAC7D,OAAO,EAAE;aACT,MAAM,CAAC,UAAC,iBAAiB,EAAE,aAAa;YACrC,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,IAAI,eAAe,CAAC,CAAC,CAAC;gBACrD,eAAe,GAAG,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC;gBAClD,iBAAiB,EAAE,CAAC;gBACpB,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC/B,CAAC;YACD,aAAa,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YAClC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACzD,MAAM,CAAC,iBAAiB,CAAC;QAC7B,CAAC,EACC,IAAI,KAAK,EAAiB,CAAC,CAAC;QAClC,mBAAmB,GAAG,CAAC,CAAC;QAGxB,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAE7C,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC7B,wBAAwB,CAAC,OAAO,CAAC,iBAAO;YACpC,OAAO,CAAC,OAAO,CAAC,uBAAa;gBACzB,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EACtD,OAAO,GAAG,KAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;gBAEvE,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACtB,MAAM,CAAC;gBACX,CAAC;gBAED,IAAI,OAAO,GAAoB,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBAEvE,+DAA+D;gBAC/D,EAAE,CAAC,CAAC,+CAAS,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;oBAC/C,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;oBAC1B,MAAM,CAAC;gBACX,CAAC;gBACD,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,WAAC,IAAM,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC;gBAC3D,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBACzB,IAAI,CAAC,OAAO,CAAC,UAAC,MAAM,EAAE,KAAK;oBACvB,IAAI,YAAY,GAAG,iDAAW,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;oBACzD,MAAM,CAAC,GAAG,CAAC,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;gBACzE,CAAC,CACA,CAAC;YACN,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAChC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAM,EAAE,GAAG;YACvB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,cAAc,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YACpC,CAAC;QACL,CAAC,CACA,CAAC;QAEF,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACpC,MAAM,CAAC,cAAc,CAAC;IAC1B,CAAC;IAGO,+BAAa,GAArB,UAAsB,MAAc,EAAE,WAAoB;QAEtD,IAAI,qBAAqB,GAAG,6CAAO,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAC,IAAI,oDAAO,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,EAAF,CAAE,CAAC,EAAxB,CAAwB,CAAC,CAAC;QAE3E,IAAI,CAAC,IAAI,CAAC,GAAG,CACT,UAAC,IAAI,EAAE,QAAQ;YACX,IAAI,CAAC,OAAO,CACR,UAAC,IAAI,EAAE,WAAW;gBACd,4BAAqB,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;YAA/D,CAA+D,CACtE,CAAC;QACN,CAAC,CACJ;QAED,EAAE,EAAC,MAAM,CAAC,EAAC;YACP,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAClD,CAAC;QAED,0CAA0C;QAC1C,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;IACvE,CAAC;IAEL,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;AC1jByC;AAEmB;AAI7D;IAA4B,0BAAO;IAC/B,gBAAY,MAAc,EAAE,QAAsB,EAAE,IAAY;QAC5D,kBAAM,MAAM,EAAE,QAAQ,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;IACtC,CAAC;IAEM,qBAAI,GAAX,UAAY,cAA4B,EAAE,QAAoB;QAC1D,gBAAK,CAAC,IAAI,YAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEM,gBAAS,GAAhB,UAAiB,MAAc,EAAE,QAAsB,EAAE,MAAc,EAAE,IAAmB,EAAE,GAAW;QACrG,IAAI,SAAS,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrB,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,mEAAU,CAAC,GAAG,CAAC,gEAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IACM,uBAAM,GAAb,UAAc,MAAc;QACxB,gBAAK,CAAC,MAAM,YAAC,MAAM,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QAEpB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QAC3D,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL,aAAC;AAAD,CAAC,CAhC2B,gEAAO,GAgClC;;;;;;;;;;;;;;;;ACtC+C;AAEhD;IAAsC,oCAAS;IAE3C,0BAAY,IAAiB;QACzB,kBAAM,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACjE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;IAED,gCAAK,GAAL,UAAM,CAAS,EAAE,CAAS,EAAE,IAAS;QACjC,gBAAK,CAAC,KAAK,YAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;IACL,uBAAC;AAAD,CAAC,CAXqC,uEAAS,GAW9C;;;;;;;;;;;;;ACT0B;AAE3B,gEAAgE;AAEhE,IAAY,OAeX;AAfD,WAAY,OAAO;IACf,yCAAM;IACN,6CAAQ;IACR,qCAAI;IACJ,gCAAgC;IAChC,6CAAQ;IACR,+CAAS;IACT,qCAAI;IACJ,mCAAG;IACH,uCAAK;IACL,mCAAG;IACH,2CAAO;IACP,wCAAK;IACL,0CAAM;IACN,sDAAY;AAChB,CAAC,EAfW,OAAO,KAAP,OAAO,QAelB;AAkCD;IAKI,oBAAmB,IAAgB,EAAS,GAAY;QAArC,SAAI,GAAJ,IAAI,CAAY;QAAS,QAAG,GAAH,GAAG,CAAS;QAFhD,aAAQ,GAAY,KAAK,CAAC;QAG9B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;IACvB,CAAC;IAEM,yBAAI,GAAX,UAAY,YAAoB,EAAE,YAAoB;QAElD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAC3B,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,mBAAmB;gBACnB,MAAM,CAAC;YACX,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;QACvD,CAAC;QAAC,IAAI,CAAC,CAAC;YAEJ,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;QACtD,CAAC;IACL,CAAC;IAEO,sCAAiB,GAAzB,UAA0B,YAAoB,EAAE,YAAoB;QAChE,IAAI,cAAc,GAAG,CAAC,oDAAkD;QACxE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;YAC9B,cAAc,GAAG,CAAC,CAAC;QACvB,CAAC;QACD,IAAI,MAAM,GAAG,cAAc,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC/C,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;IAC/C,CAAC;IAEO,qCAAgB,GAAxB,UAAyB,YAAoB,EAAE,YAAoB;QAAnE,iBAgBC;QAdG,oCAAoC;QACpC,+BAA+B;QAC/B,2FAA2F;QAC3F,yIAAyI;QACzI,IAAI,YAAY,GAAG,YAAY,CAAC,MAAM;QAClC,sDAAsD;QACtD,SAAS,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,EACzH,UAAU,GAAG,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EACpD,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAGnE,6CAAO,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,eAAK;YACrC,KAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,YAAY,EAAE,UAAU,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC;QAC3F,CAAC,CAAC,CAAC;IACP,CAAC;IAIO,8BAAS,GAAjB,UAAkB,KAAK;QACnB,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC,cAAc,CAAC;IAC7C,CAAC;IAGG,0EAA0E;IACtE,wCAAmB,GAA3B,UAA4B,YAAoB,EAAC,YAAY,EAAE,YAAoB;QAAnF,iBA8BC;QA7BG,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC,CAAC,EAClG,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC,CAAC,EACnG,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,EACnD,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,YAAY,EAAE,YAAY,CAAC,EAChE,qBAAqB,GAAG,oCAAC,CAAC,WAAW,CAAC;aACjC,IAAI,EAAE;aACN,MAAM,CAAC,UAAC,MAAM,IAAK,aAAM,CAAC,MAAM,EAAb,CAAa,CAAC,CAAC,GAAG,CAAC,gBAAM,IAAI,aAAM,CAAC,MAAM,EAAb,CAAa,CAAC;aAC9D,KAAK,EAAE,EACZ,aAAa,GAAG,CAAC,CAAC;QAEtB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAEtD,qBAAqB,CAAC,OAAO,CAAC,gBAAM;YAChC,IAAI,cAAc,GAAG,CAAC,oDAAkD;YACxE,EAAE,CAAC,CAAC,aAAa,IAAI,KAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC/C,MAAM;YACV,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;gBAC1B,MAAM,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,aAAa,EAAE,CAAC;YACpB,CAAC;YACD,EAAE,CAAC,CAAC,KAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;gBAC9B,cAAc,GAAG,CAAC,CAAC;YACvB,CAAC;YACD,IAAI,MAAM,GAAG,cAAc,GAAG,KAAI,CAAC,SAAS,EAAE,CAAC;YAC/C,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,2BAAM,GAAb;QACI,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC9C,CAAC;IAEO,6BAAQ,GAAhB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEO,8BAAS,GAAjB;QACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7E,CAAC;IAEO,yCAAoB,GAA5B;QACI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC3D,CAAC;IAEO,oCAAe,GAAvB;QACI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtD,CAAC;IAEO,qCAAgB,GAAxB,UAAyB,MAAM;QAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACxC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC;IAC1B,CAAC;IAlEM,yBAAc,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;IAmE5C,iBAAC;AAAD,CAAC;AAED;IAAA;IA0KA,CAAC;IAxKU,cAAG,GAAV,UAAW,OAAgB,EAAE,GAAY;QACrC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACd,KAAK,OAAO,CAAC,MAAM;gBACf,MAAM,CAAC,IAAI,UAAU,CAAC;oBAClB,QAAQ,EAAE,CAAC;oBACX,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,EAAE;oBACb,cAAc,EAAE,EAAE;oBAClB,YAAY,EAAE,CAAC;oBACf,iBAAiB,EAAE,CAAC;oBACpB,OAAO,EAAE,CAAC;oBACV,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,gBAAgB,EAAE,CAAC;oBACnB,QAAQ,EAAE,KAAK;iBAClB,EAAE,GAAG,CAAC,CAAC;YACZ,KAAK,OAAO,CAAC,QAAQ;gBAEjB,MAAM,CAAC,IAAI,UAAU,CAAC;oBAClB,QAAQ,EAAE,CAAC;oBACX,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,EAAE;oBACb,cAAc,EAAE,EAAE;oBAClB,YAAY,EAAE,CAAC;oBACf,iBAAiB,EAAE,CAAC;oBACpB,OAAO,EAAE,CAAC;oBACV,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,EAAE;oBACf,WAAW,EAAE,CAAC;oBACd,gBAAgB,EAAE,CAAC;oBACnB,QAAQ,EAAE,KAAK;iBAClB,EAAE,GAAG,CAAC,CAAC;YACZ,KAAK,OAAO,CAAC,IAAI;gBAEb,MAAM,CAAC,IAAI,UAAU,CAAC;oBAClB,QAAQ,EAAE,CAAC;oBACX,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,cAAc,EAAE,EAAE;oBAClB,YAAY,EAAE,CAAC;oBACf,iBAAiB,EAAE,CAAC;oBACpB,OAAO,EAAE,CAAC;oBACV,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,gBAAgB,EAAE,CAAC;oBACnB,QAAQ,EAAE,KAAK;iBAClB,EAAE,GAAG,CAAC,CAAC;YACZ,KAAK,OAAO,CAAC,GAAG;gBAEZ,MAAM,CAAC,IAAI,UAAU,CAAC;oBAClB,QAAQ,EAAE,CAAC;oBACX,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,cAAc,EAAE,EAAE;oBAClB,YAAY,EAAE,CAAC;oBACf,iBAAiB,EAAE,CAAC;oBACpB,OAAO,EAAE,CAAC;oBACV,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,gBAAgB,EAAE,CAAC;oBACnB,QAAQ,EAAE,KAAK;iBAClB,EAAE,GAAG,CAAC,CAAC;YACZ,KAAK,OAAO,CAAC,KAAK;gBAEd,MAAM,CAAC,IAAI,UAAU,CAAC;oBAClB,QAAQ,EAAE,CAAC;oBACX,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,cAAc,EAAE,EAAE;oBAClB,YAAY,EAAE,CAAC;oBACf,iBAAiB,EAAE,CAAC;oBACpB,OAAO,EAAE,CAAC;oBACV,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,gBAAgB,EAAE,CAAC;oBACnB,QAAQ,EAAE,KAAK;iBAClB,EAAE,GAAG,CAAC,CAAC;YACZ,KAAK,OAAO,CAAC,GAAG;gBAEZ,MAAM,CAAC,IAAI,UAAU,CAAC;oBAClB,QAAQ,EAAE,CAAC;oBACX,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,cAAc,EAAE,EAAE;oBAClB,YAAY,EAAE,CAAC;oBACf,iBAAiB,EAAE,CAAC;oBACpB,OAAO,EAAE,CAAC;oBACV,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,gBAAgB,EAAE,CAAC;oBACnB,QAAQ,EAAE,KAAK;iBAClB,EAAE,GAAG,CAAC,CAAC;YACZ,KAAK,OAAO,CAAC,OAAO;gBAEhB,MAAM,CAAC,IAAI,UAAU,CAAC;oBAClB,QAAQ,EAAE,CAAC;oBACX,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,cAAc,EAAE,EAAE;oBAClB,YAAY,EAAE,CAAC;oBACf,iBAAiB,EAAE,CAAC;oBACpB,OAAO,EAAE,CAAC;oBACV,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,gBAAgB,EAAE,CAAC;oBACnB,QAAQ,EAAE,KAAK;iBAClB,EAAE,GAAG,CAAC,CAAC;YACZ,KAAK,OAAO,CAAC,KAAK;gBAEd,MAAM,CAAC,IAAI,UAAU,CAAC;oBAClB,QAAQ,EAAE,CAAC;oBACX,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,cAAc,EAAE,EAAE;oBAClB,YAAY,EAAE,CAAC;oBACf,iBAAiB,EAAE,CAAC;oBACpB,OAAO,EAAE,CAAC;oBACV,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,gBAAgB,EAAE,CAAC;oBACnB,QAAQ,EAAE,KAAK;iBAClB,EAAE,GAAG,CAAC,CAAC;YACZ,KAAK,OAAO,CAAC,MAAM;gBAEf,MAAM,CAAC,IAAI,UAAU,CAAC;oBAClB,QAAQ,EAAE,CAAC;oBACX,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,SAAS,EAAE,CAAC;oBACZ,cAAc,EAAE,EAAE;oBAClB,YAAY,EAAE,CAAC;oBACf,iBAAiB,EAAE,CAAC;oBACpB,OAAO,EAAE,CAAC;oBACV,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,CAAC;oBACd,gBAAgB,EAAE,CAAC;oBACnB,QAAQ,EAAE,KAAK;iBAClB,EAAE,GAAG,CAAC,CAAC;YAEZ;gBACI,KAAK,CAAC;QACd,CAAC;IACL,CAAC;IACL,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;AC5WyC;AAOf;AAE3B,IAAK,MAIJ;AAJD,WAAK,MAAM;IACP,qCAAK;IACL,qCAAK;IACL,6CAAS;AACb,CAAC,EAJI,MAAM,KAAN,MAAM,QAIV;AACD,IAAM,WAAW,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAEpE;IAA4B,0BAAO;IAK/B,gBAAY,MAAc,EAAE,QAAsB,EAAE,MAAc,EAAE,IAAmB;QACnF,kBAAM,MAAM,EAAE,QAAQ,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,WAAW,CAAC,8CAAQ,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9F,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;IACtC,CAAC;IAGM,gBAAS,GAAhB,UAAiB,MAAc,EAAE,QAAsB,EAAE,MAAc,EAAE,IAAmB;QACxF,IAAI,SAAS,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrB,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAGM,qBAAI,GAAX,UAAY,GAAY,EAAE,QAAoB;QAE1C,IAAI,eAAe,GAAkB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,gBAAM,IAAI,aAAM,CAAC,MAAM,EAAb,CAAa,CAAC,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,EAAR,CAAQ,CAAC,CAAC;QAE5G,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;YACxD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QACjC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;QAC3D,CAAC;IACL,CAAC;IAEO,oCAAmB,GAA3B,UAA4B,aAA4B,EAAE,GAAY;QAClE,IAAI,WAAW,GAAG,IAAI,EAClB,uBAAuB,GAAG,GAAG,EAC7B,cAAc,GAAG,IAAI,CAAC,cAAc,EACpC,QAAQ,GAAe,IAAI,EAC3B,YAAY,GAAG,IAAI,CAAC,MAAM,EAC1B,MAAM,GAAG,IAAI,CAAC,OAAO,EACrB,gBAAwB,EACxB,IAAI,GAAG,IAAI,CAAC;QAChB,aAAa,CAAC,OAAO,CAAC,WAAC;YACnB,IAAI,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC;YAE5B,yCAAyC;YACzC,SAAS,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAClD,SAAS,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9C,SAAS,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAClD,SAAS,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;YAC9C,SAAS,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;YAC9C,SAAS,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAClD,SAAS,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9C,SAAS,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAClD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACZ,IAAI,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,YAAY,EAAE,YAAY,EAAE,cAAc,CAAC,EAChE,QAAQ,GAAG,4CAAM,CAAC,IAAI,CAAC,EACvB,UAAU,GAAG,QAAQ,GAAG,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBACzE,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;gBAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACP,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;oBACjC,MAAM;gBACV,CAAC;YACL,CAAC;YAED,mBAAmB,CAAS,EAAE,CAAS;gBACnC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC/C,cAAc,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;oBACjC,MAAM,CAAC;gBACX,CAAC;gBAED,IAAI,MAAM,GAAW,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACzC,EAAE,EAAC,MAAM,CAAC,MAAM,CAAC,EAAC;oBACd,MAAM;gBACV,CAAC;gBACD,IAAI,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,YAAY,EAAE,MAAM,EAAE,cAAc,CAAC,EAC1D,QAAQ,GAAG,4CAAM,CAAC,IAAI,CAAC,EACvB,UAAU,GAAG,QAAQ,GAAG,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBAEzE,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,uBAAuB,IAAI,UAAU,KAAK,MAAM,CAAC,CAAC,CAAC;oBAC5F,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;oBACjC,MAAM;gBACV,CAAC;YACL,CAAC;YACD,gCAAgC,QAAa,EAAE,MAAc;gBACzD,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;YAC9D,CAAC;YAED,wBAAwB,IAAgB,EAAE,MAAc;gBACpD,WAAW,GAAG,CAAC,CAAC;gBAChB,uBAAuB,GAAG,IAAI,CAAC,MAAM,CAAC;gBACtC,QAAQ,GAAG,IAAI,CAAC;gBAChB,gBAAgB,GAAG,MAAM,CAAC;YAC9B,CAAC;QACL,CAAC,CAAC;QAEF,MAAM,CAAC;YACH,QAAQ,EAAE,uBAAuB;YACjC,MAAM,EAAE,WAAW;YACnB,IAAI,EAAE,QAAQ;YACd,MAAM,EAAE,gBAAgB;SAC3B;IACL,CAAC;IAGO,kCAAiB,GAAzB,UAA0B,QAAuB,EAAE,GAAY,EAAE,QAAoB;QAArF,iBAsBC;QArBG,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,KAAK,KAAI,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE,IAAI,KAAI,CAAC,EAAE,EAA3C,CAA2C,CAAC,CAAC;QAC/E,IAAI,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAE1D,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;YACxB,QAAQ,EAAE,CAAC;YACX,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,EAAE,CAAC,CAAC,aAAa,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,2BAA2B;YAC3B,QAAQ;YACR,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;YACnC,QAAQ,EAAE,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC,MAAM,CAAC;YACzC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAElC,GAAG,CAAC,uBAAuB,CAAC,IAAI,EAAE,aAAa,CAAC,IAAI,EAAE,cAAM,eAAQ,EAAE,EAAV,CAAU,EAAE,cAAM,cAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAvB,CAAuB,CAAC,CAAC;QAC3G,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACO,iCAAgB,GAAxB,UAAyB,QAAuB,EAAE,GAAY,EAAE,QAAoB;QAApF,iBAyBC;QAvBG,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,KAAK,KAAI,CAAC,MAAM,EAAxB,CAAwB,CAAC,CAAC;QAE5D,IAAI,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC1D,qEAAqE;QAGrE,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,EAAE,CAAC,CAAC,aAAa,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAClC,QAAQ;YACR,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;YACnC,QAAQ,EAAE,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC,MAAM,CAAC;YACzC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAElC,GAAG,CAAC,uBAAuB,CAAC,IAAI,EAAE,aAAa,CAAC,IAAI,EAAE,cAAM,eAAQ,EAAE,EAAV,CAAU,EAAE,cAAM,cAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAvB,CAAuB,CAAC,CAAC;QAC3G,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAGM,uBAAM,GAAb,UAAc,MAAc;QACxB,gBAAK,CAAC,MAAM,YAAC,MAAM,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QAC3D,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEM,wBAAO,GAAd,UAAe,YAAoB,EAAE,MAAa;QAC9C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;QAC3D,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAE/B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;QAE3B,EAAE,EAAC,IAAI,CAAC,EAAE,IAAE,CAAC,CAAC,EAAC;YACX,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;YAEzC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK;YACzB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK;YAC3B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE;YAC7B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI;YACzB,IAAI,KAAK,GAAG,oCAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QAE7D,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL,aAAC;AAAD,CAAC,CA5L2B,gEAAO,GA4LlC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5MyC;AACwB;AAGlE;IAA2C,yCAAkB;IAE3D;QACE,iBAAO,CAAC;QAER,yCAAyC;QACzC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;IACvD,CAAC;IARH;QAAC,wFAAU,EAAE;;6BAAA;IASb,4BAAC;AAAD,CAAC,CAR0C,yEAAkB,GAQ5D;AAEM,IAAM,sBAAsB,GAAG,EAAE,OAAO,EAAE,qEAAc,EAAE,QAAQ,EAAE,qBAAqB,EAAE,CAAC;AAGnG;;;;EAIE;;;;;;;;;;;;;;;;;;;;;;;ACrBwC;AACI;AAChB;AAI9B;IAEI,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAGnC,gCAAU,GAAV,UAAW,MAAc;QAAzB,iBAGC;QAFG,yBAAyB;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,YAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAvC,CAAuC,CAAC,CAAC;IACtH,CAAC;IAEO,sCAAgB,GAAxB,UAAyB,MAAc,EAAE,QAAkB;QACvD,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,EACtB,QAAQ,GAAe,IAAI,CAAC,QAAQ,EACpC,MAAM,GAAe,IAAI,CAAC,MAAM,CAAC;QAErC,MAAM,CAAC;YACH,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE;YACrB,MAAM,EAAE,MAAM;YACd,aAAa,EAAE,QAAQ,CAAC,GAAG,CAAC,WAAC,IAAI,OAAS;gBACtC,GAAG,EAAE,eAAe,GAAG,CAAC,CAAC,KAAK;gBAC9B,GAAG,EAAE,CAAC,CAAC,IAAI;aACd,EAHgC,CAGhC,CAAC;SACL,CAAC;IACN,CAAC;IAEM,iCAAW,GAAlB,UAAmB,WAAwB,EAAE,IAAiB;QAC1D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAEvF,WAAW,CAAC,aAAa,CAAC,OAAO,CAAC,WAAC;YAC/B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,4BAAM,GAAb,UAAc,WAAwB,EAAE,IAAiB,EAAE,KAAmB;QAC1E,IAAI,GAAG,GAAmB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACrE,WAAW,CAAC,aAAa,CAAC,OAAO,CAAC,WAAC;YAC/B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;YAC9B,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,IAAI,MAAM,GAAG,IAAI,GAAG,EAA+B,CAAC;QACpD,IAAI,eAAe,GAAG,IAAI,GAAG,EAAe,CAAC;QAC7C,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,WAAC;YACxB,IAAI,KAAK,GAAwB,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACzD,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC;YAChC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC1B,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC;QAEF,IAAI,QAAQ,GAAe,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;QACrD,QAAQ,CAAC,GAAG,CAAC,WAAC;YACV,MAAM,CAAC;gBACH,UAAU,EAAE,CAAC,CAAC,QAAQ;gBACtB,OAAO,EAAE,CAAC,CAAC,KAAK;aACnB;QACL,CAAC,CAAC;aACG,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,EAAP,CAAO,CAAC;aACpB,GAAG,CAAC,WAAC;YAEF,IAAI,KAAK,GAAG,CAAC,EACT,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;YAGpB,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC;gBACrB,IAAI,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;gBAC1C,EAAE,EAAC,WAAW,CAAC,EAAC;oBACZ,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,GAAC,KAAK,EAAE,WAAW,CAAC,CAAC;oBACnD,KAAK,EAAE,CAAC;gBACZ,CAAC;YACL,CAAC;QACL,CAAC,CACA,CAAC;QAEN,MAAM,CAAC;YACH,GAAG,EAAE,GAAG;YACR,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,eAAe;SAC3B,CAAC;IACN,CAAC;IAhFL;QAAC,wFAAU,EAAE;;mBAAA;IAiFb,kBAAC;;AAAD,CAAC;;;;;;;;;;;;;;ACtFD;IAA8C,oCAAgB;IAA9D;QAA8C,8BAAgB;IAkJ9D,CAAC;IArIU,gCAAe,GAAtB,UAAuB,gBAAqB,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,eAAgB;QAEhG,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,SAAS,GAAG,SAAS,IAAI,EAAE,CAAC;QAE5B,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;YAAC,IAAI,GAAG,KAAK,CAAC;QAAC,CAAC;QAEzC,+EAA+E;QAC/E,EAAE,CAAC,CAAC,eAAe,KAAK,SAAS,CAAC,CAClC,CAAC;YACG,EAAE,CAAC,CAAC,MAAM,IAAI,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAC5C,CAAC;gBACG,eAAe,GAAG,IAAI,CAAC;YAC3B,CAAC;YACD,IAAI,CACJ,CAAC;gBACG,eAAe,GAAG,KAAK,CAAC;YAC5B,CAAC;QACL,CAAC;QAED,gBAAgB,CAAC,aAAa,GAAG,EAAE,CAAC;QAEpC,gBAAgB,CAAC,UAAU,CAAC,eAAe,CAAC,MAAM,EAAE,eAAe,EAAE,gBAAgB,CAAC,aAAa,CAAC,CAAC;QAErG,IAAI,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,UAAU,EAAE,gBAAgB,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAEhL,gBAAgB,CAAC,aAAa,GAAG,KAAK,CAAC;QAEvC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC;QAIjD,gBAAgB,CAAC,WAAW,GAAG,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAE7D,EAAE,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC,aAAa,CAAC,CAC1C,CAAC;YACG,gBAAgB,CAAC,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC;QAClD,CAAC;QAED,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAEzC,CAAC;IAGD,iCAAM,GAAN;QAMI,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAClB,CAAC;YACG,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,CACjE,CAAC;YACG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YAEpB,YAAY;YACZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC;YAEjF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YAE1C,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CACjC,CAAC;gBACG,8CAA8C;gBAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC3D,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YACtD,CAAC;YAED,wBAAwB;YACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YAE3E,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CACpB,CAAC;gBACG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC;YACxC,CAAC;YACD,IAAI,CACJ,CAAC;gBACG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC;YACxC,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,CAC7G,CAAC;gBACG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CACd,CAAC;oBACG,6CAA6C;oBAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;oBAEpE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CACpB,CAAC;wBACG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;oBAClE,CAAC;oBAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;oBAE7E,+DAA+D;oBAC/D,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CACtB,CAAC;wBACG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC7C,CAAC;oBAED,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,wBAAwB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;oBACjE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;oBAEzC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAClB,CAAC;wBACG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;wBAEhD,8DAA8D;wBAC9D,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;oBAC7B,CAAC;oBACD,IAAI,CACJ,CAAC;wBACG,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC;gBACL,CAAC;gBACD,IAAI,CACJ,CAAC;oBACG,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;YACL,CAAC;YACD,IAAI,CACJ,CAAC;gBACG,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;YACzC,CAAC;QACL,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACL,uBAAC;AAAD,CAAC,CAlJ6C,MAAM,CAAC,SAAS,GAkJ7D;yEAAA;;;;;;;;;;;;;;;AChJ2C;AACN;AACsB;AACF;AAE1D,kIAAkI;AAClI,sEAAsE;AACtE,yCAAyC;AAGzC;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AACH;IAmCI,gBAAY,OAAe,EAAU,WAAwB;QAnCjE,iBA8eC;QA3cwC,gBAAW,GAAX,WAAW,CAAa;QAtBrD,qBAAgB,GAAG,IAAI,CAAC;QACxB,mBAAc,GAAG,IAAI,CAAC;QACtB,oBAAe,GAAG,IAAI,CAAC;QAMvB,UAAK,GAAG,GAAG,CAAC;QAWpB,UAAK,GAAY,IAAI,CAAC;QAkJtB,wBAAmB,GAAwB,IAAI,GAAG,EAAE,CAAC;QACrD,mBAAc,GAA+B,IAAI,GAAG,EAAE,CAAC;QA2N/C,cAAS,GAAe;YAC5B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,CAAC,CAAC;YACR,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,KAAK;SACjB;QA/WG,IAAI,CAAC,UAAU,GAAG,2DAAU,CAAC,MAAM,CAAC,WAAC;YACjC,KAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAC1C,cAAI,IAAI,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAf,CAAe,EACvB,eAAK,IAAI,cAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,EAAlC,CAAkC,EAC3C,cAAM,cAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAA1B,CAA0B,CAAC,CAAC;IAC1C,CAAC;IACO,qBAAI,GAAZ,UAAa,WAAwB;QACjC,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,UAAU,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC,WAAW,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,gBAAgB,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAElN;YACI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC9B,CAAC;QACD;YACI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC7B,CAAC;QACD;YACI,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;IACL,CAAC;IAEM,0BAAS,GAAhB,UAAiB,KAAoC;QACjD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IACM,yBAAQ,GAAf,UAAgB,IAAmC,EAAE,OAAsC;QACvF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IACM,sBAAK,GAAZ;QACI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC/E,yDAAyD;IAC7D,CAAC;IAEO,wBAAO,GAAf,UAAgB,WAAwB;QAEpC,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC7D,mEAAmE;QACnE,2CAA2C;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,wCAAwC,EAAE,yCAAyC,EAAE,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;QACnK,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,oEAAoE,EAAE,qEAAqE,EAAE,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;QAClO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,0EAA0E,EAAE,2EAA2E,EAAE,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;QACjP,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,4DAA4D,EAAE,6DAA6D,EAAE,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;QAC3M,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,yBAAyB,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,8BAA8B,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,+BAA+B,CAAC,CAAC,CAAC;QAC7E,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,4EAA4E,EAAE,6EAA6E,EAAE,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;IAEnP,CAAC;IAED,uBAAM,GAAN,UAAO,WAAwB;QAC3B,IAAI,IAAI,GAAgB,IAAI,CAAC,UAAU,CAAC;QACxC,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACvD,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,aAAa,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QACpC,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAE/B,UAAU,CAAC,IAAI,EAAE,CAAC;QAClB,UAAU,CAAC,MAAM,GAAG,GAAG,CAAC;QACxB,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;QAEvB,WAAW;QACX,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAEhC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC;QACjC,WAAW,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC/C,WAAW,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;QAClD,WAAW,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAEhD,IAAI,UAAU,GAAe,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACxF,IAAI,cAAc,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAEzD,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;QAElC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,kEAAkE;QAElE,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;QAElC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QACtD,IAAI,CAAC,IAAI,GAAG;YACR,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAChE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC9D,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAChE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACjE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC;SAC3D,CAAC;QAEF,IAAI,CAAC,iBAAiB,GAAG,IAAI,6DAAI,CAAC,IAAI,EAAE,mFAAgB,EAAE,GAAG,EAAE,eAAe,CAAC,CAAC;QAChF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;QAC/C,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,eAAe,EAAE,eAAe,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACjF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAGxD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;QACnD,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACpE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAGtD,IAAI,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QACxD,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;QAC9B,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAE3D,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAC/D,CAAC;QAED,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,6BAA6B;QAC7B,6BAA6B;IACjC,CAAC;IACM,yCAAwB,GAA/B;QACI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;IAChC,CAAC;IAEM,mCAAkB,GAAzB,UAA0B,KAA0B;QAApD,iBASC;QARG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,KAAK,CAAC,OAAO,CAAC,cAAI;YACd,IAAI,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACvE,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAChC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,wBAAwB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YACvE,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC,CACA,CAAC;IACN,CAAC;IAMM,mCAAkB,GAAzB,UAA0B,QAAuB;QAAjD,iBASC;QARG,QAAQ,CAAC,OAAO,CAAC,iBAAO;YACpB,EAAE,CAAC,CAAC,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAC7C,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;gBAC/C,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;YACrD,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACM,sCAAqB,GAA5B;QACI,IAAI,CAAC,mBAAmB,GAAG,IAAI,GAAG,EAAE,CAAC;QACrC,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAM;YACzC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IACM,gCAAe,GAAtB,UAAuB,QAA6B,EAAE,KAA0B;QAC5E,kCAAkC;QADtC,iBAkCC;QA/BG,IAAI,eAAe,GAAgB,IAAI,GAAG,EAAE,EACxC,OAAO,GAAgB,IAAI,GAAG,EAAE,CAAC;QAErC,KAAK,CAAC,OAAO,CAAC,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,EAAlC,CAAkC,CAAC,CAAC;QAC1D,QAAQ,CAAC,OAAO,CAAC,cAAI;YACjB,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;YAC9C,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;QAErD,KAAK,CAAC,OAAO,CAAC,cAAI;YACd,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;YACpC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACzC,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAC7C,CAAC;YAED,IAAI,KAAK,GAAG,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAElD,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,EAAE,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACvF,CAAC;YAGD,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAChC,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;YACrD,CAAC;QACL,CAAC,CACA,CAAC;QACF,qCAAqC;IACzC,CAAC;IAGM,4BAAW,GAAlB,UAAmB,QAAsB;QACrC,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE,EAAE,gBAAgB,CAAC,CAAC;QACtF,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACzE,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC5E,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC7E,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1E,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACzD,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC1B,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAGM,6BAAY,GAAnB,UAAoB,QAAsB,EAAE,UAAkB;QAC1D,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE,EAAE,mBAAmB,CAAC,EACrF,SAAS,GAAG,CAAC,CAAC;QAClB,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAChE,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAEtD,mJAAmJ;QAEnJ,4EAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,UAAU,GAAG,SAAS,EAAE,UAAU,GAAG,SAAS,EAAE,UAAU,GAAG,SAAS,EAAE,UAAU,GAAG,SAAS,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAEtL,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,UAAU,GAAG,SAAS,EAAE,UAAU,GAAG,SAAS,EAAE,UAAU,GAAG,SAAS,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QACzH,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,UAAU,GAAG,UAAU,EAAE,UAAU,GAAG,UAAU,EAAE,UAAU,GAAG,UAAU,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAC7H,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,UAAU,GAAG,OAAO,EAAE,UAAU,GAAG,OAAO,EAAE,UAAU,GAAG,OAAO,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QACjH,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAC/F,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAC/F,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QACnG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAGvF,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEpB,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAIhG,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAEnD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC3B,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEM,0BAAS,GAAhB,UAAiB,SAAiB;QAC9B,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,GAAG,CAAC;QAE9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;IAEO,8BAAa,GAArB;QACI,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,EACpB,WAAW,GAAiB,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;QAEnD,WAAW,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QACzB,WAAW,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAEzB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC5B,CAAC;IAEO,gCAAe,GAAvB;QACI,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,EACpB,WAAW,GAAiB,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;QAEnD,WAAW,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QACzB,WAAW,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC9B,CAAC;IACO,6BAAY,GAApB;QACI,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,EACpB,WAAW,GAAiB,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;QAEnD,WAAW,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QACzB,WAAW,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAEzB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3B,CAAC;IAEM,gCAAe,GAAtB,UAAuB,QAAsB;QACzC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;IAE7B,CAAC;IAEM,iCAAgB,GAAvB,UAAwB,QAAsB;QAA9C,iBASC;QARG,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QAE3B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QAC1B,CAAC;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtH,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,cAAM,YAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAArB,CAAqB,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IACM,uBAAM,GAAb,UAAc,MAAqB,EAAE,CAAS,EAAE,CAAS,EAAE,QAAoB;QAA/E,iBASC;QAPG,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QAE3B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAClG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,cAAM,YAAI,CAAC,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAjC,CAAiC,EAAE,IAAI,CAAC,CAAC;IAC7E,CAAC;IAEM,uBAAM,GAAb,UAAc,MAAqB,EAAE,gBAAwB;QACzD,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAClC,CAAC;IAEO,2BAAU,GAAlB,UAAmB,MAAqB,EAAE,QAAoB;QAC1D,QAAQ,EAAE,CAAC;IACf,CAAC;IAEO,0CAAyB,GAAjC;QACI,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,EACtB,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IACvD,CAAC;IAEO,6BAAY,GAApB;QACI,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,EACtB,MAAM,GAAG,IAAI,CAAC,MAAM,EACpB,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,EACxC,cAAc,GAAG,MAAM,CAAC,QAAQ,EAChC,QAAQ,GAAG,EAAE,EACb,UAAU,GAAG,EAAE,CAAC;QAEpB,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,GAAG,UAAU,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;QACxF,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;QACxF,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,GAAG,UAAU,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;QACxF,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC;YACnD,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,UAAU,EAAE,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC;YACpF,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC9D,CAAC;IACL,CAAC;IAEM,qCAAoB,GAA3B,UAA4B,QAAsB;QAC9C,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC5C,MAAM,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAEM,iCAAgB,GAAvB,UAAwB,QAAsB;QAC1C,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC5C,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;IACrE,CAAC;IACM,gCAAe,GAAtB,UAAuB,QAAsB;QACzC,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC5C,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC;IACvD,CAAC;IAEO,kCAAiB,GAAzB,UAA0B,QAAsB;QAC5C,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACxF,CAAC;IASO,0BAAS,GAAjB;QACI,IAAI,MAAM,GAAkB,IAAI,CAAC,MAAM,EACnC,qBAAqB,GAAiB,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,0CAA0C;QAEhH,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAEvD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,CAAC,GAAG,qBAAqB,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,CAAC,GAAG,qBAAqB,CAAC,CAAC,CAAC;YACnC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAC7C,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YACrC,IAAI,QAAQ,GAAG,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAE/C,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;gBAC5B,EAAE,CAAC,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC;oBACjB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;wBACvB,IAAI,CAAC,YAAY,EAAE,CAAC;wBACpB,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;wBAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;4BACb,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;4BACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;4BAEpE,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;4BAC1B,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;wBAC5B,CAAC;oBACL,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;oBACpB,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC;gBAChC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACpB,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;gBACzB,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC;gBAChC,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC;gBAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;oBACzB,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;gBACnC,CAAC;YACL,CAAC;QAEL,CAAC;IAEL,CAAC;IAEO,oCAAmB,GAA3B;QACI,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,EACtB,MAAM,GAAG,IAAI,CAAC,MAAM,EACpB,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,EACxC,cAAc,GAAG,MAAM,CAAC,QAAQ,EAChC,WAAW,GAAG,EAAE,EAChB,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;QAC/B,KAAK,CAAC,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC;QAC5F,KAAK,CAAC,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC;QAC5F,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACO,gCAAe,GAAvB;QACI,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAC/B,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC;QACrC,IAAI,sBAAsB,GAAG,IAAI,CAAC;QAClC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/E,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;QAC/E,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;QAC/E,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/E,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QACvG,CAAC;QAED,EAAE,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;QAE7B,CAAC;IACL,CAAC;IAED,uBAAM,GAAN;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,EAAE,CAAC;IAG3B,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACphBD;IAA0B,wBAAY;IAIlC,cAAY,IAAiB,EAAU,UAA4B,EAAE,SAAiB,EAAE,IAAY;QAChG,kBAAM,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAD/B,eAAU,GAAV,UAAU,CAAkB;QAE/D,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IAEO,6BAAc,GAAtB,UAAuB,SAAS;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,EAAE,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC;QACX,CAAC,CAAC,6CAA6C;QAC/C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;YACjC,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB;YACxE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC;IACL,CAAC;IAEM,wBAAS,GAAhB,UAAiB,CAAS,EAAE,CAAS,EAAE,IAAa;QAChD,IAAI,GAAG,GAAc,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACP,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,GAAG,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACxB,CAAC;QACD,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACtB,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IACL,WAAC;AAAD,CAAC,CA/ByB,MAAM,CAAC,KAAK,GA+BrC;;;;;;;;;;;;;;;AChCD;IAA+B,6BAAa;IAIxC,mBAAY,IAAiB,EAAE,CAAU,EAAE,CAAU,EAAE,OAAgB;QACnE,kBAAM,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IAED,yBAAK,GAAL,UAAM,CAAS,EAAE,CAAS,EAAE,IAAU;QAClC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtB,CAAC;IACL,gBAAC;AAAD,CAAC,CAd8B,MAAM,CAAC,MAAM,GAc3C;;;;;;;;;ACfD;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF;AACA;;;AAGA;AACA,mDAAoD,yBAAyB,GAAG,yBAAyB,yBAAyB,aAAa,cAAc,GAAG,qDAAqD,wCAAwC,gCAAgC,GAAG;;AAEhS;;;AAGA;AACA,2C;;;;;;;ACXA,0H","file":"main.bundle.js","sourcesContent":["import { Entity, EntityType } from 'app/game/entity'\nimport { Weapon } from 'app/game/weapon'\nimport { Engine } from 'app/phaser/engine'\nimport { Square } from 'app/game/map'\n\nexport class _Entity implements Entity {\n    angle: number = 90\n\n    static idcount: number = 0\n    visionRange: number\n    pathMap: Map<string, any[]>\n    id: number\n    engine: Engine\n    teamId: number\n    sprite: Phaser.Sprite\n    attackRange: number\n    type = EntityType.human\n    position: Phaser.Point\n    maxAction: number\n    currentAction: number\n    weapons: Array<Weapon> = []\n    armor: number\n    pv: number\n    maxArmor: number\n    maxPv: number\n    mouvementRange: number\n    square: Square\n    targetSquare: Square\n    coverDetection: number\n    visibleSquares: Array<Square>\n    updateAccessibleTiles: boolean\n    mapLastUpdate: number\n    isMasked: boolean\n\n\n    constructor(engine: Engine, position: Phaser.Point) {\n        this.engine = engine;\n        this.position = position;\n        this.id = _Entity.idcount++;\n    }\n\n    public maskEntity(): _Entity {\n        this.isMasked = true;\n        this.setAnimation();\n        return this;\n    }\n    public unmaskEntity(): _Entity {\n        this.isMasked = false;\n        this.setAnimation();\n        return this;\n    }\n\n    listener() {\n        //this.targeted(this);\n    }\n\n    private setAnimation() {\n        let prefix = this.isMasked ? 'masked-' : '',\n            angle = this.angle,\n            animation = '';\n        if (angle > 0) {\n            if (angle < 45) {\n                animation = prefix + 'right'\n            } else if (angle < 135) {\n                animation = prefix + 'down'\n            } else {\n                animation = prefix + 'left';\n            }\n        } else {\n            angle = Math.abs(angle);\n            if (angle < 45) {\n                animation = prefix + 'right'\n            } else if (angle < 135) {\n                animation = prefix + 'up'\n            } else {\n                animation = prefix + 'left';\n            }\n        }\n\n        console.log('direction', animation);\n        this.engine.lookTo(this.sprite, animation);\n    }\n\n    private updateDirection(sourcePosition: Phaser.Point, targetPosition: Phaser.Point) {\n        let angle = Math.atan2(targetPosition.y - sourcePosition.y, targetPosition.x - sourcePosition.x) * (180 / Math.PI);\n\n        this.angle = angle;\n\n        this.isMasked = this.square.mask;\n\n        this.setAnimation();\n    }\n\n    public finishMoving(): _Entity {\n        this.sprite.play('stand-down');\n        return this;\n    }\n\n    public touched(sourceEntity: Entity, damage: number): _Entity {\n        return this;\n    }\n\n    public attack(target: Entity): _Entity {\n\n        this.updateDirection(this.position, target.position);\n\n        return this;\n    }\n    public move(targetPosition: Phaser.Point, callback: () => void): _Entity {\n\n        this.updateDirection(this.position, targetPosition);\n\n        this.position = targetPosition;\n        this.engine.moveTo(this.sprite, this.position.x, this.position.y, callback);\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/_entity.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 293;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 293\n// module chunks = 1","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { AfterContentInit, Component, ElementRef } from '@angular/core';\nimport { GameService } from 'app/loader/game.service';\nimport GameMap from 'app/game-map';\nimport GameSprites from 'app/game-sprites';\nimport { GameSprite } from 'app/game-sprite';\nimport GameTile from 'app/game-tile';\nimport GameCamera from 'app/game-camera';\nimport { Game } from 'app/game/game';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  providers: [GameService],\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterContentInit {\n  private game: Game;\n  private camera: GameCamera;\n  private map: GameMap;\n  private sprites: GameSprites;\n\n  public constructor(private elementRef: ElementRef, private gameService: GameService) { }\n\n\n  public ngAfterContentInit() {\n    this.game = new Game(this.gameService);\n  }\n\n  private refresh(): void {\n    this.map.draw();\n  }\n\n  private getBackgroundCanvas(): HTMLCanvasElement {\n    var canvasBackground: HTMLCanvasElement = this.elementRef.nativeElement.querySelector('.game__canvas__background');\n\n    canvasBackground.width = 1280;\n    canvasBackground.height = 720;\n\n    return canvasBackground;\n  }\n  private getSpritesCanvas(): HTMLCanvasElement {\n    var canvasSprites: HTMLCanvasElement = this.elementRef.nativeElement.querySelector('.game__canvas__sprites');\n\n    canvasSprites.width = 1280;\n    canvasSprites.height = 720;\n\n    return canvasSprites;\n  }\n\n  private getMapCtx(mapCanvas: HTMLCanvasElement): CanvasRenderingContext2D {\n    var ctx: CanvasRenderingContext2D = mapCanvas.getContext('2d');\n    ctx.webkitImageSmoothingEnabled = false;\n    ctx.mozImageSmoothingEnabled = false;\n    return ctx;\n  }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule, JsonpModule } from '@angular/http'; \nimport { requestOptionsProvider }   from './loader/default-request-options.service'; \n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [ requestOptionsProvider ], \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Entity } from 'app/game/entity'\nimport { Weapon } from 'app/game/weapon'\nimport { Engine } from 'app/phaser/engine'\nimport { Square } from 'app/game/map'\n\nexport interface Entity {\n    maxAction: number\n    currentAction:number\n    weapons:Array<Weapon>\n    armor:number\n    pv:number\n    maxArmor:number\n    maxPv:number\n    mouvementRange:number\n    visionRange:number\n    attackRange: number\n    position:Phaser.Point\n    type:EntityType\n    sprite: Phaser.Sprite\n    pathMap:Map<string, any[]>\n    teamId:number\n    engine:Engine\n    id:number\n    square:Square\n    targetSquare:Square\n    coverDetection:number\n    visibleSquares:Array<Square>\n    updateAccessibleTiles:boolean\n    mapLastUpdate:number\n    isMasked:boolean\n\n    touched(sourceEntity: Entity, damage:number):Entity\n    attack(target: Entity):Entity\n    move(targetPosition:Phaser.Point, callback:()=> void):Entity\n    finishMoving():Entity\n    maskEntity():Entity\n    unmaskEntity():Entity\n}\nexport enum EntityType {\n    human,\n    zombie\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/entity.ts","import { Player } from 'app/game/player'\nimport { Ennemy } from 'app/game/ennemy'\nimport { Zombie } from 'app/game/zombie'\nimport { GameMap } from 'app/game/map'\nimport { Entity, EntityType } from 'app/game/entity'\nimport { Engine } from 'app/phaser/engine'\nimport { GameService } from 'app/loader/game.service'\n\n// a faire des zombie cadavres !!\n// compétence S-link\n// pendant le tour de l'IA, on désactive le clic\n//pousser des trucs pour se cacher des zomblards\n//le vent pour l'odeur ...\nexport class Game {\n    private ticking: boolean;\n    private engine: Engine;\n    private playerTeam: Array<Player>;\n    private ennemyTeam: Array<Ennemy>;\n    private zombieTeam: Array<Zombie>;\n    private turn: number;\n    private currentIndex: number;\n    private currentEntity: Entity;\n    private currentTeam: Array<Entity>;\n    private currentTeamId: number;\n\n    private zombieTeamId: number = 0;\n    private playerTeamId: number = 1;\n    private ennemyTeamId: number = 2;\n    private map: GameMap;\n\n    constructor(gameService: GameService) {\n        this.map = new GameMap('zombie');\n        this.engine = new Engine(this.map.getName(), gameService);\n        this.engine.observable.subscribe(\n            next => this.setUpTeams(),\n            error => console.error('error loading map'),\n            () => console.log('c\\'est fini'));\n    }\n\n    private setUpTeams() {\n        let engine = this.engine,\n            targetCallback = (z) => this.targeted(z),\n            map = this.map;\n        this.turn = 0;\n        this.map.setEngine(engine);\n        map.preparePathCalculator();\n        this.playerTeam = new Array<Player>();\n        this.ennemyTeam = new Array<Ennemy>();\n        this.zombieTeam = new Array<Zombie>();\n\n        this.addPlayer(5, 3);\n        this.addPlayer(6, 3);\n\n        this.addZombieAt(5, 7);\n        this.addZombieAt(4, 8);\n        this.addZombieAt(6, 8);\n        this.addZombieAt(5, 8);\n\n        this.addZombieAt(28, 17);\n        this.addZombieAt(29, 17);\n        this.addZombieAt(30, 17);\n        this.addZombieAt(31, 17);\n        this.addZombieAt(36, 12);\n        this.addZombieAt(36, 10);\n        this.addZombieAt(37, 10);\n        this.addZombieAt(38, 10);\n        this.addZombieAt(21, 21);\n\n\n        this.currentIndex = -1;\n        this.currentTeamId = this.playerTeamId;\n        this.currentTeam = this.playerTeam;\n        this.updateAllVisibilities();\n        this.nextCharacter();\n        this.showAccessibleTilesByPlayer();\n        engine.bindClick(point => this.clickOn(point));\n        engine.bindOver(point => this.overOn(point), point => this.overOff(point));\n\n    }\n\n    private addZombieAt(x, y): Zombie {\n        let zombie = Zombie.popZombie(this.engine, this.map.getPointAtSquare(x, y), this.zombieTeamId, this.zombieTeam);\n        this.map.putEntityAtPoint(zombie);\n        return zombie;\n    }\n    private addPlayer(x, y): Player {\n        let player = Player.popPlayer(this.engine, this.map.getPointAtSquare(x, y), this.playerTeamId, this.playerTeam, this.map);\n        this.map.putEntityAtPoint(player);\n        return player;\n    }\n\n    public nextAction() {\n        this.currentEntity.currentAction++;\n        if (this.currentEntity.currentAction >= this.currentEntity.maxAction) {\n            this.nextCharacter();\n        }\n        console.time(this.currentTeamId + '/' + this.currentEntity.id + ' nextAction');\n        this.updateVisibleSquaresOfEntity(this.currentEntity);\n        this.prepareAction();\n    }\n    public nextCharacter() {\n        if (this.currentIndex >= this.currentTeam.length - 1) {\n            this.nextTeam();\n            return;\n        }\n        this.currentIndex = this.currentIndex + 1;\n        this.currentEntity = this.currentTeam[this.currentIndex];\n        this.currentEntity.currentAction = 0;\n        this.engine.setGlowPosition(this.currentEntity.position);\n    }\n\n\n    public nextTeam() {\n        this.currentIndex = -1;\n\n        if (this.currentTeamId === this.playerTeamId) {\n            this.currentTeamId = this.zombieTeamId;\n            this.currentTeam = this.zombieTeam;\n        } else if (this.currentTeamId === this.zombieTeamId) {\n            this.currentTeamId = this.playerTeamId;\n            this.currentTeam = this.playerTeam;\n        }\n        this.nextCharacter();\n    }\n\n    // une entité a été ciblé\n    public targeted(target: Entity) {\n        if (this.currentEntity.id === target.id) {\n            console.log('it\\'s me');\n            return;\n        }\n\n        if (this.IsEntityInCurrentTeam(target)) {\n            this.helpTeamMate(target);\n        } else {\n            this.currentEntity.attack(target);\n        }\n    }\n\n    private updateVisibleSquaresOfEntity(entity: Entity) {\n\n        console.time('updateVisibleSquaresOfEntity');\n        this.map.setVisibileSquares(entity);\n        console.timeEnd(\"updateVisibleSquaresOfEntity\");\n    }\n\n    private updateAllVisibilities() {\n        this.playerTeam.forEach(p => {\n            this.map.setVisibileSquares(p, true);\n        })\n        this.zombieTeam.forEach(z => {\n            this.map.setVisibileSquares(z, true);\n        })\n    }\n    public IsEntityInCurrentTeam(target: Entity) {\n        return target.teamId === this.currentTeamId;\n    }\n\n    public helpTeamMate(target: Entity) {\n        console.log(this.currentEntity + ' helps ' + target);\n    }\n    private overOff(target: Phaser.Point) {\n        if (this.currentTeamId !== this.playerTeamId || this.ticking) {\n            return\n        }\n\n        // clean visibletiles\n        if (this.entityFocused) {\n            let points = this.entityFocused.visibleSquares.map(s => this.map.getPointAtSquare(s.x, s.y)).map(tile => tile.x + ':' + tile.y);\n            this.engine.removeVisibleTiles(points);\n        }\n        this.entityFocused = null;\n    }\n\n    private entityFocused: Entity\n\n    private overOn(target: Phaser.Point) {\n        if (this.currentTeamId !== this.playerTeamId || this.ticking) {\n            return\n        }\n        let square = this.map.getSquareAtPoint(target);\n        console.log('over', square);\n\n        if (square.entity) {\n            this.entityFocused = square.entity;\n            let points: Array<Phaser.Point> = square.entity.visibleSquares.map(s => this.map.getPointAtSquare(s.x, s.y));\n            console.time('addVisibleTiles');\n            this.engine.addVisibleTiles([], points);\n\n            console.timeEnd('addVisibleTiles');\n        }\n    }\n\n\n    private clickOn(target: Phaser.Point) {\n\n        if (this.currentTeamId !== this.playerTeamId || this.ticking) {\n            return\n        }\n        let square = this.map.getSquareAtPoint(target);\n\n        // targeting something\n        if (square.entity) {\n            this.currentEntity.updateAccessibleTiles = false;\n            this.targeted(square.entity);\n            this.ticking = true;\n            this.nextAction();\n            this.ticking = false;\n        }\n        else {\n            // moving to\n            if (!this.map.canEntityGoToTarget(this.currentEntity, target)) {\n                return;\n            }\n\n\n            this.map.moveEntityAtPoint(this.currentEntity, target,\n                () => {\n                    this.currentEntity.updateAccessibleTiles = true;\n                    this.currentEntity.targetSquare = this.map.getSquareAtPoint(target);\n                    this.showAccessibleTilesByPlayer();\n                    this.nextAction()\n                    this.ticking = false;\n                }, (error) => {\n                    console.log('sorry', error);\n                    this.ticking = false;\n                });\n\n            this.ticking = true;\n        }\n    }\n\n    private prepareAction() {\n\n        if (this.currentTeamId === this.zombieTeamId) {\n            console.time(this.currentTeamId + '/' + this.currentEntity.id + ' zombie play');\n            this.zombieTeam[this.currentIndex].play(this.map,\n                () => {\n                    console.timeEnd(this.currentTeamId + '/' + this.currentEntity.id + ' zombie play');\n                    console.timeEnd(this.currentTeamId + '/' + this.currentEntity.id + ' nextAction');\n                    console.time(this.currentTeamId + '/' + this.currentEntity.id + ' timeout');\n                    setTimeout(\n                        () => {\n                            console.timeEnd(this.currentTeamId + '/' + this.currentEntity.id + ' timeout');\n                            this.nextAction();\n                        }, 300);\n                }\n            );\n        } else {\n            if (this.currentEntity.currentAction === 0) {\n                this.showAccessibleTilesByPlayer();\n                console.timeEnd(this.currentTeamId + '/' + this.currentEntity.id + ' nextAction');\n            }\n        }\n    }\n\n    private showAccessibleTilesByPlayer() {\n        this.currentEntity.updateAccessibleTiles = true;\n        this.map.setAccessibleTilesByEntity(this.currentEntity);\n        this.currentEntity.updateAccessibleTiles = false;\n        this.showAccessibleTiles(this.currentEntity);\n    }\n\n    /**\n     * show accessible tile for current entity\n     */\n    private showAccessibleTiles(entity: Entity) {\n        let positions: Array<Phaser.Point> = new Array();\n        entity.pathMap.forEach((path, key) => {\n            let splittedKey = key.split(':'),\n                squareX = Number(splittedKey[0]),\n                squareY = Number(splittedKey[1]);\n            positions.push(this.map.getPointAtSquare(squareX, squareY));\n        });\n        this.engine.addAccessibleTiles(positions);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/game.ts","import { Entity, EntityType } from 'app/game/entity';\nimport { Engine } from 'app/phaser/engine';\nimport * as _ from 'lodash';\ndeclare let Graph: any;\ndeclare let astar: any;\n\nconst tilesize = 32;\n\nexport class GameMap {\n    private entities: Array<Entity> = new Array();\n    private grid: Array<Array<number>>;\n    private size: MapSize;\n    public squares: Map<string, Square> = new Map<string, Square>()\n    private engine: Engine;\n    public rnd:Phaser.RandomDataGenerator;\n    constructor(private name: string) { }\n\n    setEngine(engine: Engine) {\n        this.engine = engine;\n        this.rnd = engine.phaserGame.rnd;\n    }\n\n    public setVisibileSquares(entity: Entity, force?: boolean) {\n        if (!entity.updateAccessibleTiles && !force) {\n            return;\n        }\n        console.time(entity.id + '=>setVisibileSquares');\n        let square = entity.square,\n            x: number = square.x,\n            y: number = square.y,\n            perimetre: Array<Square> = this.getSquareInRange(x, y, entity.visionRange),\n            visibleSquares: Array<Square> = new Array();\n\n        // TODO comme pour les déplacements, mettre en cache les case déja visibles.\n\n        perimetre.forEach(currentSquare => {\n            let line = this.BresenhamLine(square, currentSquare),\n                squareJustBefore = line.length > 2 ? line[1] : null;\n\n            // si la case justeavant masque la case, on ne l'ajoute pas\n            if (squareJustBefore && entity.coverDetection < squareJustBefore.cover) {\n                return;\n            }\n\n            let canSeeSquare = line.reduce((canSee, currentSquare) => {\n                // si l'entité ne peut pas voir au dela de l case, elle ne pourra pas voir plus loin\n                if (currentSquare.cover === 100) {\n                    return false;\n                }\n\n\n                return canSee;\n            }, true);\n            if (canSeeSquare) {\n                visibleSquares.push(currentSquare);\n            }\n        });\n        entity.visibleSquares = visibleSquares;\n        console.timeEnd(entity.id + '=>setVisibileSquares');\n    }\n\n    private getSquareInRange(xm, ym, r): Array<Square> {\n        //console.time('getSquareInRange');\n        /* bottom left to top right */\n        let x = -r, y = 0, err = 2 - 2 * r,\n            perimetre: Array<Square> = new Array(),\n            squaresMap: Map<string, Square> = new Map(),\n            squaresInRange: Array<Square> = new Array(),\n            size = this.size,\n            isBetween = this.isBetween,\n            squares = this.squares;\n\n        do {\n            /*   I. Quadrant +x +y */\n            addToSquares((xm - x), (ym + y));\n            /*  II. Quadrant -x +y */\n            addToSquares((xm - y), (ym - x));\n            /* III. Quadrant -x -y */\n            addToSquares((xm + x), (ym - y));\n            /*  IV. Quadrant +x -y */\n            addToSquares((xm + y), (ym + x));\n\n            r = err;\n            if (r <= y) {\n                /* y step */\n                err += ++y * 2 + 1;\n            }\n            if (r > x || err > y) {\n                /* x step */\n                err += ++x * 2 + 1;\n            }\n        } while (x < 0);\n\n        squaresMap.forEach(s => squaresInRange.push(s));\n        //console.timeEnd(\"getSquareInRange\");\n        return squaresInRange;\n\n        function addToSquares(x, y) {\n            let step = x\n\n\n            if (x < xm) {\n                for (step; step <= xm; step++) {\n                    addSquareToRange();\n                }\n            } else {\n                for (step; step >= xm; step--) {\n                    addSquareToRange();\n                }\n            }\n\n            function addSquareToRange(){\n                    let key = step + ':' + y,\n                        square = squares.get(key);\n\n                    if (square && (step >= 0 && y >= 0)) {\n                        square.data.distanceFrom = step;\n                        squaresMap.set(key, squares.get(key));\n                    }\n            }\n        }\n    }\n\n\n\n    // si derrière une case à 50% de cover il est invisible.\n    // si il se trouve\n    public getVisibleEntitiedByEntity(entity: Entity): Array<Entity> {\n        let square = entity.square,\n            x: number = square.x,\n            y: number = square.y,\n            xMin = Math.max(x - entity.visionRange, 0),\n            xMax = Math.min(x + entity.visionRange, this.size.width),\n            yMin = Math.max(y - entity.visionRange, 0),\n            yMax = Math.min(y + entity.visionRange, this.size.height),\n            filter = (e: Entity) => {\n                return this.isBetween(e.square.x, xMin, xMax) && this.isBetween(e.square.y, yMin, yMax);\n            };\n\n        let visibleEntities = this.entities.filter(filter).filter(e => this.isEntityCanSeeEntityB(entity, e));\n        return visibleEntities;\n    }\n\n    private isBetween(value, min, max) {\n        return min <= value && value <= max;\n    }\n\n    private isEntityCanSeeEntityB(a: Entity, b: Entity): boolean {\n        let squares = this.BresenhamLine(a.square, b.square);\n\n        return squares.reduce((canSee, currentSquare) => {\n\n            // si l'entité ne peut pas voir au dela de al case, elle ne pourra pas voir plus loin\n            if (a.coverDetection < currentSquare.cover) {\n                return false;\n            }\n            return canSee;\n        }, true);\n\n    }\n\n    // Returns the list of points from (x0, y0) to (x1, y1)\n    public BresenhamLine(start: Square, end: Square): Array<Square> {\n        let x0: number = start.x,\n            y0: number = start.y,\n            x1: number = end.x,\n            y1: number = end.y,\n            result: Array<Square> = new Array(),\n            steep: boolean = Math.abs(y1 - y0) > Math.abs(x1 - x0);\n        // Optimization: it would be preferable to calculate in\n        // advance the size of \"result\" and to use a fixed-size array\n        // instead of a list.\n\n        if (steep) {\n            //Swap(ref x0, ref y0);\n            x0 = start.y;\n            y0 = start.x;\n            //Swap(ref x1, ref y1);\n            x1 = end.y;\n            y1 = end.x;\n\n        }\n        if (x0 > x1) {\n            //Swap(ref x0, ref x1);\n            let tempX = x0;\n            x0 = x1;\n            x1 = tempX\n            //Swap(ref y0, ref y1);\n            let tempY = y0;\n            y0 = y1;\n            y1 = tempY;\n        }\n\n        let deltax: number = x1 - x0,\n            deltay: number = Math.abs(y1 - y0),\n            error: number = 0,\n            ystep: number = y0 < y1 ? 1 : -1,\n            y: number = y0;\n\n        for (let x = x0; x <= x1; x++) {\n            let point = new Phaser.Point();\n            if (steep) {\n                point.x = y;\n                point.y = x;\n            }\n            else {\n                point.x = x;\n                point.y = y;\n            }\n            let key = point.x + ':' + point.y;\n\n            result.push(this.squares.get(key));\n            error += deltay;\n            if (2 * error >= deltax) {\n                y += ystep;\n                error -= deltax;\n            }\n        }\n\n        return result;\n    }\n\n\n    public preparePathCalculator() {\n        let tileMap: Phaser.Tilemap = this.engine.map;\n        this.size = {\n            width: tileMap.width / 2,\n            height: tileMap.height / 2\n        }\n\n        this.grid = new Array();\n        _.times(this.size.height, rowIndex => {\n            let row: Array<number> = new Array();\n            _.times(this.size.width, columnIndex => {\n                let tilePosition: Phaser.Point = this.getPointAtSquare(columnIndex, rowIndex),\n                    gridStatus: number = this.engine.isPositionCollidable(tilePosition) ? 1 : 0,\n                    tileCover: number = this.engine.getPositionCover(tilePosition),\n                    mask: boolean = this.engine.getPositionMask(tilePosition);\n                row.push(gridStatus);\n\n                let key = columnIndex + ':' + rowIndex;\n                if (!this.squares.has(key)) {\n                    this.squares.set(key, {\n                        entity: null,\n                        x: columnIndex,\n                        y: rowIndex,\n                        cover: tileCover,\n                        data: {},\n                        mask : mask\n                    })\n                }\n            });\n            this.grid.push(row);\n        })\n        // this.easyStar.enableCornerCutting();\n        //this.easyStar.enableDiagonals();\n    }\n\n    public putEntityAtPoint(entity: Entity): Square {\n\n        let position = new Phaser.Point;\n        position.x = entity.position.x;\n        position.y = entity.position.y;\n        let square = this.getSquareAtPoint(position);\n\n        if (square.entity) {\n            throw new Error(\"entity.already.here\");\n        }\n        this.grid[square.y][square.x] += 10;\n\n        square.entity = entity;\n        entity.square = square;\n        entity.targetSquare = square;\n\n        square.mask ? entity.maskEntity() : entity.unmaskEntity();\n\n        this.entities.push(entity)\n\n        return square;\n    }\n\n    public setAccessibleTilesByEntity(entity: Entity) {\n        //mapLastUpdate\n        entity.mapLastUpdate = this.mapLastUpdate;\n        let squareInRange: Array<Square> = this.getSquareInRange(entity.targetSquare.x, entity.targetSquare.y, entity.mouvementRange);\n\n        let pathes = this.getWalkableTiles(entity.targetSquare, squareInRange, entity.mouvementRange);\n        this.collecteAccessibleTiles(entity, pathes);\n    }\n\n    private collecteAccessibleTiles(entity: Entity, pathes: Map<string, any[]>) {\n        entity.pathMap = pathes;\n    }\n\n    public mapLastUpdate: number = new Date().getTime();\n\n    public moveEntityFollowingPath(entity: Entity, path: Array<any>, callback: () => void, error: (e) => void): void {\n\n        let self = this,\n            grid = this.grid,\n            sourceSquare = this.getSquareAtPoint(entity.position);\n        let shortestPath = this.getPathTo(sourceSquare, _.last(path), entity.mouvementRange, true);\n\n        if (shortestPath === null) {\n            error('Path was not found.');\n            return;\n        }\n        let currentPositionIndex = 0;\n        move();\n        function move() {\n            let currentPathPoint = shortestPath[currentPositionIndex],\n                currentPosition = self.getPointAtSquare(currentPathPoint.x, currentPathPoint.y);\n            let square = self.getSquareAtPoint(currentPosition);\n            entity.square = square;\n\n            //at last position\n            if (currentPositionIndex >= shortestPath.length - 1) {\n                entity.move(currentPosition, () => {\n                    let targetSquare = self.getSquareAtPoint(currentPosition);\n                    entity.finishMoving();\n                    sourceSquare.entity = null;\n\n                    // un probleme ici ? cliquer sur 9:9 les zombies vont s'entasser\n                    targetSquare.entity = entity;\n\n                    let sourceInfo = grid[sourceSquare.y][sourceSquare.x];\n\n                    if (sourceInfo === 0 || sourceInfo === 1) {\n                        grid[sourceSquare.y][sourceSquare.x] = 0;\n                    } else if (sourceInfo > 9) {\n                        grid[sourceSquare.y][sourceSquare.x] -= 10;\n                    }\n\n                    grid[targetSquare.y][targetSquare.x] += 10;\n                    callback();\n                });\n                self.engine.moveGlowPosition(currentPosition);\n\n                self.mapLastUpdate = new Date().getTime();\n\n            } else {\n                currentPositionIndex = currentPositionIndex + 1;\n                console.log(\"moving to \", currentPosition.x + ':' + currentPosition.y, currentPathPoint);\n                entity.move(currentPosition, () => move());\n\n\n                self.engine.moveGlowPosition(currentPosition);\n            }\n        }\n\n    }\n\n\n    public canEntityGoToTarget(entity: Entity, targetPoint: Phaser.Point) {\n        let targetSquare = this.getSquareAtPoint(targetPoint),\n            key = this.getCoordinatesKey(targetSquare.x, targetSquare.y);\n        return entity.pathMap.get(key) != null;\n    }\n\n    public moveEntityAtPoint(entity: Entity, targetPoint: Phaser.Point, callback: () => void, error: (e) => void): void {\n        let sourceSquare = this.getSquareAtPoint(entity.position),\n            targetSquare = this.getSquareAtPoint(targetPoint),\n            grid = this.grid;\n\n\n        // on recalcule le chemin en activant les diagonales pour un chemin plus fluide\n        let shortestPath = this.getPathTo(sourceSquare, targetSquare, entity.mouvementRange, true);\n\n        if (!shortestPath) {\n            error('Path was not found.');\n            return;\n        }\n        let currentPositionIndex = 0;\n\n        \n        let move = () => {\n            let currentPathPoint = shortestPath[currentPositionIndex],\n                currentPosition = this.getPointAtSquare(currentPathPoint.x, currentPathPoint.y),\n                square = this.getSquareAtPoint(currentPosition);\n            entity.square = square;\n            if (currentPositionIndex >= shortestPath.length - 1) {\n                entity.move(currentPosition, () => {\n                    entity.finishMoving();\n                    sourceSquare.entity = null;\n                    targetSquare.entity = entity;\n\n                    let sourceInfo = grid[sourceSquare.y][sourceSquare.x];\n\n                    if (sourceInfo === 0 || sourceInfo === 1) {\n                        grid[sourceSquare.y][sourceSquare.x] = 0;\n                    } else if (sourceInfo > 9) {\n                        grid[sourceSquare.y][sourceSquare.x] -= 10;\n                    }\n\n                    grid[targetSquare.y][targetSquare.x] += 10;\n                    callback();\n                });\n                this.engine.moveGlowPosition(currentPosition);\n            } else {\n                currentPositionIndex = currentPositionIndex + 1;\n                console.log(\"moving to \", currentPosition.x + ':' + currentPosition.y, currentPathPoint);\n                entity.move(currentPosition, () => move());\n\n\n                this.engine.moveGlowPosition(currentPosition);\n            }\n        }\n        move();\n    }\n\n    public getName(): string {\n        return this.name;\n    }\n    public getSize(): MapSize {\n        return this.size;\n    }\n    public getPointAtSquare(squareX: number, squareY: number): Phaser.Point {\n        let point: Phaser.Point = new Phaser.Point();\n        point.x = Math.min(squareX * 32, this.size.width * 32);\n        point.y = Math.min(squareY * 32, this.size.width * 32);\n        return point;\n    }\n    public getSquare(x:number, y:number): Square {\n        let key = this.getCoordinatesKey(x, y);\n        return this.squares.get(key);\n\n    }\n    public getSquareAtPoint(point: Phaser.Point): Square {\n\n        let key = this.getPointKey(point),\n            squareX = Math.min(point.x / 32, this.size.width),\n            squareY = Math.min(point.y / 32, this.size.width);\n\n        if (!this.squares.has(key)) {\n            this.squares.set(key, {\n                entity: null,\n                x: squareX,\n                y: squareY,\n                cover: 0,\n                data: {},\n                mask:false\n            })\n        }\n\n        return this.squares.get(key);\n    }\n\n    private getPointKey(point: Phaser.Point): string {\n        let squareX = Math.min(point.x / 32, this.size.width),\n            squareY = Math.min(point.y / 32, this.size.width);\n        return this.getCoordinatesKey(squareX, squareY);\n    }\n    private getCoordinatesKey(x: number, y: number): string {\n        return x + ':' + y;\n    }\n\n    public getPathTo(start: Square, end: Square, range: number, useDiagonal?:boolean): Array<any> {\n        let graph = this.buildNewGraph(end, useDiagonal),\n            startTile = graph.grid[start.x][start.y],\n            endTile = graph.grid[end.x][end.y],\n            pathes = new Map<string, Array<any>>(),\n            rawPath: Array<GridNode> = astar.search(graph, startTile, endTile),\n            length = rawPath.length;\n\n        //on coupe le chemin pour n'avoir que la partie la plus courte\n        let path = _.dropRight(rawPath.map(p => { return { x: p.x, y: p.y } }), length - 1 - range);\n\n        return path;\n    }\n\n    private getWalkableTiles(start: Square, squareInRange: Array<Square>, range: number): Map<string, Array<any>> {\n\n        ///  a faire, voir les cases qui sont directements accessibles, tracer les chemins pour les autres cas\n\n        console.time('getWalkableTiles');\n\n        let self = this,\n            tilesCalculated = 0,\n            tilesCalculatedFinish = 0,\n            currentDistance: number = 999,\n            currentGroupIndex = -1,\n            grid = this.grid,\n            filteredPathes = new Map<string, Array<any>>(),\n            pathes = new Map<string, Array<any>>(),\n            graph = this.buildNewGraph(),\n            squaresGroupedByDistance: Array<Array<Square>>,\n            processedGroupIndex;\n\n        //for max range\n        // search surrounding nodes\n\n        squaresGroupedByDistance = squareInRange\n            .sort((s1, s2) => s1.data.distanceFrom - s2.data.distanceFrom)\n            .reverse()\n            .reduce((groupedByDistance, currentSquare) => {\n                if (currentSquare.data.distanceFrom != currentDistance) {\n                    currentDistance = currentSquare.data.distanceFrom;\n                    currentGroupIndex++;\n                    groupedByDistance.push([]);\n                }\n                currentSquare.data.process = true;\n                groupedByDistance[currentGroupIndex].push(currentSquare);\n                return groupedByDistance;\n            }\n            , new Array<Array<Square>>());\n        processedGroupIndex = 0;\n\n\n        let startTile = graph.grid[start.x][start.y];\n\n        console.time('astar.search');\n        squaresGroupedByDistance.forEach(squares => {\n            squares.forEach(currentSquare => {\n                let endTile = graph.grid[currentSquare.x][currentSquare.y],\n                    pathKey = this.getCoordinatesKey(currentSquare.x, currentSquare.y);\n\n                if (pathes.has(pathKey)) {\n                    return;\n                }\n\n                let rawPath: Array<GridNode> = astar.search(graph, startTile, endTile);\n\n                //on déroule le chemin, et on remplis les chemin vers les cases\n                if (_.isEmpty(rawPath) || rawPath.length > range) {\n                    pathes.set(pathKey, null);\n                    return;\n                }\n                let path = rawPath.map(p => { return { x: p.x, y: p.y } });\n                let length = path.length;\n                path.forEach((square, index) => {\n                    let pathToSquare = _.dropRight(path, length - 1 - index);\n                    pathes.set(this.getCoordinatesKey(square.x, square.y), pathToSquare);\n                }\n                );\n            });\n        });\n        console.timeEnd('astar.search');\n        pathes.forEach((pathTo, key) => {\n            if (pathTo) {\n                filteredPathes.set(key, pathTo);\n            }\n        }\n        );\n\n        console.timeEnd(\"getWalkableTiles\");\n        return filteredPathes;\n    }\n\n\n    private buildNewGraph(square?:Square, useDiagonal?:boolean): any {\n\n        let negativeCollisionGrid = _.range(50).map(x => _.range(50).map(y => -1));\n\n        this.grid.map(\n            (line, rowIndex) => {\n                line.forEach(\n                    (tile, columnIndex) =>\n                        negativeCollisionGrid[columnIndex][rowIndex] = tile > 0 ? 0 : 1\n                );\n            }\n        )\n\n        if(square){\n            negativeCollisionGrid[square.x][square.y] = 1;\n        }\n\n        //return new Graph(negativeCollisionGrid);\n        return new Graph(negativeCollisionGrid, { diagonal: useDiagonal });\n    }\n\n}\n\ninterface MapSize {\n    width: number,\n    height: number\n}\n\nexport interface Square {\n    x: number,\n    y: number,\n    entity: Entity,\n    cover: number,\n    data: any,\n    mask:boolean\n}\ninterface GridNode {\n    x: number\n    y: number\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/map.ts","import { _Entity } from 'app/game/_entity'\nimport { Entity } from 'app/game/entity'\nimport { Weapon, WeaponPool, WEAPONS } from 'app/game/weapon'\nimport { Engine } from 'app/phaser/engine'\nimport { GameMap } from 'app/game/map'\n\nexport class Player extends _Entity {\n    constructor(engine: Engine, position: Phaser.Point, team: number) {\n        super(engine, position);\n        this.sprite = engine.createHuman(position);\n        this.teamId = team;\n        this.maxAction = 2;\n        this.mouvementRange = 10;\n        this.visionRange = 4;\n        this.coverDetection = 10;\n        this.updateAccessibleTiles = true;\n    }\n\n    public move(targetPosition: Phaser.Point, callback: () => void): Player {\n        super.move(targetPosition, callback);\n        return this;\n    }\n\n    static popPlayer(engine: Engine, position: Phaser.Point, teamId: number, team: Array<Player>, map:GameMap): Player {\n        let newPlayer = new Player(engine, position, teamId);\n        team.push(newPlayer);\n        newPlayer.weapons.push(WeaponPool.add(WEAPONS.SHOOTGUN, map));\n        return newPlayer;\n    }\n    public attack(target: Entity): Player {\n        super.attack(target);\n        this.engine.playSound('gun');\n        this.engine.shake();\n\n        this.weapons[0].fire(this, target);\n        console.log('zombie attacks ' + target.id + target.teamId);\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/player.ts","import { Spawnable } from 'app/phaser/spawnable'\r\n\r\nexport class VisibilitySprite extends Spawnable {\r\n\r\n    constructor(game: Phaser.Game) {\r\n        super(game, null, null, 'markers');\r\n        this.animations.add(\"visible\", [\"marker/visible_tile\"], 5, true);\r\n        this.play(\"visible\");\r\n    }\r\n\r\n    spawn(x: number, y: number, data: any){\r\n        super.spawn(x, y, data);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/visibilitySprite.ts","import { Entity } from 'app/game/entity'\nimport { GameMap } from 'app/game/map'\nimport { Engine } from 'app/phaser/engine'\nimport { Square } from 'app/game/map'\nimport * as _ from 'lodash';\n\n// prevoir une compétence pour utiliser les machines guns debout\n\nexport enum WEAPONS {\n    NINEMM,\n    SHOOTGUN,\n    AR15,\n    //Ruger No. 1 Varminter K1-V-BBZ\n    RUGER_K1,\n    BLASER_R8,\n    PIPE,\n    AXE,\n    PUNCH,\n    BAT,\n    NAILBAT,\n    KNIFE,\n    KATANA,\n    HAND_GRENADE\n}\n\nexport interface fireReturn {\n}\n\nexport interface WeaponData {\n    minRange: number\n    maxRange: number\n    minDamage: number\n    maxDamage: number\n    precision: number\n    criticalChance: number\n    maxAmmo: number\n    currentAmmo: number\n    jammedChance: number\n    maxEntityByBullet: number\n    // si setté, la balle perdra en dommage par case parcouru\n    damageReduction?: number\n    // si supérieur à 0, on calcul un arbre de dispersion et on applique la précision sur chaqune des cibles.\n    spreadAngle: number\n    projectileByShot: number\n    // pour les armes à explosion\n    damageRange: number\n    damageRangeReduction?: number\n    isRanged: boolean\n}\n\nexport interface Weapon {\n    data: WeaponData\n\n    fire(sourceEntity: Entity, targetEntity: Entity): void\n    reload(): void\n}\n\nclass WeaponImpl implements Weapon {\n\n    private rnd: Phaser.RandomDataGenerator;\n    private isJammed: boolean = false;\n\n    constructor(public data: WeaponData, public map: GameMap) {\n        this.rnd = map.rnd;\n    }\n\n    public fire(sourceEntity: Entity, targetEntity: Entity): void {\n\n        if (this.isJammed) {\n            return;\n        }\n\n        if (this.data.isRanged) {\n            if (this.data.currentAmmo > 0) {\n                this.data.currentAmmo--\n            }\n            else {\n                //you should reload\n                return;\n            }\n        }\n\n        if (this.checkJam()) {\n            return;\n        }\n\n        if (this.data.spreadAngle == 0) {\n            this.shootSingleBullet(sourceEntity, targetEntity);\n        } else {\n\n            this.shootMultyBullet(sourceEntity, targetEntity);\n        }\n    }\n\n    private shootSingleBullet(sourceEntity: Entity, targetEntity: Entity) {\n        let damageModifier = 1//plus tard on aura les modifieurs source et cible\n        if (!this.checkHitSuccess()) {\n            return;\n        }\n\n        if (this.checkCriticalSuccess()) {\n            damageModifier = 2;\n        }\n        let damage = damageModifier * this.getDamage();\n        targetEntity.touched(sourceEntity, damage);\n    }\n\n    private shootMultyBullet(sourceEntity: Entity, targetEntity: Entity) {\n\n        // check les trajectoires des balles\n        // angle par rapport à la cible\n        // l'angle est à placer sur la ligne des x2. Puis on divise l'angle pour chacune des balles\n        // on calcul des lignes de BresenhamLine pour checker le coup sur la première entité rencontrée (plus tard on verra pour celles derrière)\n        let sourceSquare = sourceEntity.square,\n            // les y sont inversés, il faut donc inverser l'angle.\n            baseAngle = -Math.atan2(targetEntity.square.y - sourceSquare.y, targetEntity.square.x - sourceSquare.x) * (180 / Math.PI),\n            startAngle = baseAngle + (this.data.spreadAngle / 2),\n            angleStep = this.data.spreadAngle / this.data.projectileByShot;\n\n\n        _.times(this.data.projectileByShot, index => {\n            this.processSingleBullet(sourceEntity ,sourceSquare, startAngle - (index * angleStep));\n        });\n    }\n\n    static RADIANS_FACTOR = (Math.PI / 180);\n\n    private toRadians(angle) {\n        return angle * WeaponImpl.RADIANS_FACTOR;\n    }\n\n\n        //todo enregistrer tous les dommages d'une action et résoudre ça à la fin.\n    private processSingleBullet(sourceEntity: Entity,sourceSquare, currentAngle: number) {\n        let targetX = Math.round(Math.cos(this.toRadians(currentAngle)) * this.data.maxRange) + sourceSquare.x,\n            targetY = -Math.round(Math.sin(this.toRadians(currentAngle)) * this.data.maxRange) + sourceSquare.y,\n            targetSquare = this.map.getSquare(targetX, targetY),\n            lineOfSight = this.map.BresenhamLine(sourceSquare, targetSquare),\n            entitiesOnLineOfSight = _(lineOfSight)\n                .tail()\n                .filter((square) => square.entity).map(square => square.entity)\n                .value(),\n            entityTouched = 0;\n\n        console.log('bullet', currentAngle, targetX, targetY);\n\n        entitiesOnLineOfSight.forEach(entity => {\n            let damageModifier = 1//plus tard on aura les modifieurs source et cible\n            if (entityTouched >= this.data.maxEntityByBullet) {\n                return\n            }\n\n            if (!this.checkHitSuccess()) {\n                return;\n            } else {\n                entityTouched++;\n            }\n            if (this.checkCriticalSuccess()) {\n                damageModifier = 2;\n            }\n            let damage = damageModifier * this.getDamage();\n            entity.touched(sourceEntity, damage);\n        });\n    }\n\n    public reload(): void {\n        this.data.currentAmmo = this.data.maxAmmo;\n    }\n\n    private checkJam(): boolean {\n        if (this.checkRollSuccess(this.data.jammedChance)) {\n            this.isJammed = true;\n        }\n        return this.isJammed;\n    }\n\n    private getDamage(): number {\n        return this.rnd.integerInRange(this.data.minDamage, this.data.maxDamage);\n    }\n\n    private checkCriticalSuccess(): boolean {\n        return this.checkRollSuccess(this.data.criticalChance);\n    }\n\n    private checkHitSuccess(): boolean {\n        return this.checkRollSuccess(this.data.precision);\n    }\n\n    private checkRollSuccess(chance): boolean {\n        let roll = this.rnd.realInRange(0, 100);\n        return roll <= chance;\n    }\n}\n\nexport class WeaponPool {\n\n    static add(weapons: WEAPONS, map: GameMap): Weapon {\n        switch (weapons) {\n            case WEAPONS.NINEMM:\n                return new WeaponImpl({\n                    minRange: 0,\n                    maxRange: 9,\n                    minDamage: 1,\n                    maxDamage: 3,\n                    precision: 65,\n                    criticalChance: 10,\n                    jammedChance: 5,\n                    maxEntityByBullet: 1,\n                    maxAmmo: 6,\n                    currentAmmo: 6,\n                    spreadAngle: 0,\n                    damageRange: 0,\n                    projectileByShot: 1,\n                    isRanged: false\n                }, map);\n            case WEAPONS.SHOOTGUN:\n\n                return new WeaponImpl({\n                    minRange: 0,\n                    maxRange: 5,\n                    minDamage: 1,\n                    maxDamage: 2,\n                    precision: 80,\n                    criticalChance: 10,\n                    jammedChance: 5,\n                    maxEntityByBullet: 1,\n                    maxAmmo: 4,\n                    currentAmmo: 4,\n                    spreadAngle: 30,\n                    damageRange: 0,\n                    projectileByShot: 6,\n                    isRanged: false\n                }, map);\n            case WEAPONS.PIPE:\n\n                return new WeaponImpl({\n                    minRange: 0,\n                    maxRange: 0,\n                    minDamage: 0,\n                    maxDamage: 0,\n                    precision: 0,\n                    criticalChance: 10,\n                    jammedChance: 5,\n                    maxEntityByBullet: 1,\n                    maxAmmo: 6,\n                    currentAmmo: 6,\n                    spreadAngle: 0,\n                    damageRange: 0,\n                    projectileByShot: 1,\n                    isRanged: false\n                }, map);\n            case WEAPONS.AXE:\n\n                return new WeaponImpl({\n                    minRange: 0,\n                    maxRange: 0,\n                    minDamage: 0,\n                    maxDamage: 0,\n                    precision: 0,\n                    criticalChance: 10,\n                    jammedChance: 5,\n                    maxEntityByBullet: 1,\n                    maxAmmo: 6,\n                    currentAmmo: 6,\n                    spreadAngle: 0,\n                    damageRange: 0,\n                    projectileByShot: 1,\n                    isRanged: false\n                }, map);\n            case WEAPONS.PUNCH:\n\n                return new WeaponImpl({\n                    minRange: 0,\n                    maxRange: 0,\n                    minDamage: 0,\n                    maxDamage: 0,\n                    precision: 0,\n                    criticalChance: 10,\n                    jammedChance: 5,\n                    maxEntityByBullet: 1,\n                    maxAmmo: 6,\n                    currentAmmo: 6,\n                    spreadAngle: 0,\n                    damageRange: 0,\n                    projectileByShot: 1,\n                    isRanged: false\n                }, map);\n            case WEAPONS.BAT:\n\n                return new WeaponImpl({\n                    minRange: 0,\n                    maxRange: 0,\n                    minDamage: 0,\n                    maxDamage: 0,\n                    precision: 0,\n                    criticalChance: 10,\n                    jammedChance: 5,\n                    maxEntityByBullet: 1,\n                    maxAmmo: 6,\n                    currentAmmo: 6,\n                    spreadAngle: 0,\n                    damageRange: 0,\n                    projectileByShot: 1,\n                    isRanged: false\n                }, map);\n            case WEAPONS.NAILBAT:\n\n                return new WeaponImpl({\n                    minRange: 0,\n                    maxRange: 0,\n                    minDamage: 0,\n                    maxDamage: 0,\n                    precision: 0,\n                    criticalChance: 10,\n                    jammedChance: 5,\n                    maxEntityByBullet: 1,\n                    maxAmmo: 6,\n                    currentAmmo: 6,\n                    spreadAngle: 0,\n                    damageRange: 0,\n                    projectileByShot: 1,\n                    isRanged: false\n                }, map);\n            case WEAPONS.KNIFE:\n\n                return new WeaponImpl({\n                    minRange: 0,\n                    maxRange: 0,\n                    minDamage: 0,\n                    maxDamage: 0,\n                    precision: 0,\n                    criticalChance: 10,\n                    jammedChance: 5,\n                    maxEntityByBullet: 1,\n                    maxAmmo: 6,\n                    currentAmmo: 6,\n                    spreadAngle: 0,\n                    damageRange: 0,\n                    projectileByShot: 1,\n                    isRanged: false\n                }, map);\n            case WEAPONS.KATANA:\n\n                return new WeaponImpl({\n                    minRange: 0,\n                    maxRange: 0,\n                    minDamage: 0,\n                    maxDamage: 0,\n                    precision: 0,\n                    criticalChance: 10,\n                    jammedChance: 5,\n                    maxEntityByBullet: 1,\n                    maxAmmo: 6,\n                    currentAmmo: 6,\n                    spreadAngle: 0,\n                    damageRange: 0,\n                    projectileByShot: 1,\n                    isRanged: false\n                }, map);\n\n            default:\n                break;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/weapon.ts","import { _Entity } from 'app/game/_entity'\nimport { Entity } from 'app/game/entity'\nimport { Weapon } from 'app/game/weapon'\nimport { Engine } from 'app/phaser/engine'\nimport { GameMap } from 'app/game/map'\nimport { Game } from 'app/game/game'\nimport { Square } from 'app/game/map'\nimport * as _ from 'lodash'\n\nenum status {\n    ALERT,\n    IDDLE,\n    SEARCHING\n}\nconst zombieTypes = ['01', '02', '03', '04', '05', '06', '07', '08']\n\nexport class Zombie extends _Entity {\n\n    currentStatus: status;\n    team: Array<Zombie>\n\n    constructor(engine: Engine, position: Phaser.Point, teamId: number, team: Array<Zombie>) {\n        super(engine, position);\n        this.sprite = engine.createZombie(position, zombieTypes[_.random(0, zombieTypes.length - 1)]);\n        this.teamId = teamId;\n        this.team = team;\n        this.maxAction = 2;\n        this.mouvementRange = 6;\n        this.pv = 6;\n        this.currentStatus = status.IDDLE;\n        this.visionRange = 12;\n        this.coverDetection = 10;\n        this.updateAccessibleTiles = true;\n    }\n\n\n    static popZombie(engine: Engine, position: Phaser.Point, teamId: number, team: Array<Zombie>): Zombie {\n        let newZombie = new Zombie(engine, position, teamId, team);\n        team.push(newZombie);\n        return newZombie;\n    }\n\n\n    public play(map: GameMap, callback: () => void): void {\n\n        let visibleEntities: Array<Entity> = this.visibleSquares.filter(square => square.entity).map(s => s.entity);\n\n        if (this.lookForHumaaaans(visibleEntities, map, callback)) {\n            console.log('fresh meat ...')\n        } else {\n            this.goForCloserZombie(visibleEntities, map, callback);\n        }\n    }\n\n    private pathToClosestEntity(entitiesGroup: Array<Entity>, map: GameMap): closestEntityReturn {\n        let closerHuman = null,\n            actualDistanceFromHuman = 999,\n            mouvementRange = this.mouvementRange,\n            pathToGo: Array<any> = null,\n            actualSquare = this.square,\n            pathes = this.pathMap,\n            moveTargetSquare: Square,\n            self = this;\n        entitiesGroup.forEach(h => {\n            let targetSquare = h.square;\n\n            //check les 8 cases adjacentes à la cible\n            checkPath(targetSquare.x - 1, targetSquare.y - 1);\n            checkPath(targetSquare.x, targetSquare.y - 1);\n            checkPath(targetSquare.x + 1, targetSquare.y - 1);\n            checkPath(targetSquare.x - 1, targetSquare.y);\n            checkPath(targetSquare.x + 1, targetSquare.y);\n            checkPath(targetSquare.x - 1, targetSquare.y + 1);\n            checkPath(targetSquare.x, targetSquare.y + 1);\n            checkPath(targetSquare.x + 1, targetSquare.y + 1);\n            if (!pathToGo) {\n                let path = map.getPathTo(actualSquare, targetSquare, mouvementRange),\n                    lastStep = _.last(path),\n                    lastSquare = lastStep ? map.getSquare(lastStep.x, lastStep.y) : null;\n                console.log('path to humaaaans', pathToGo);\n                if (path) {\n                    setClosestPath(path, lastSquare);\n                    return\n                }\n            }\n\n            function checkPath(x: number, y: number) {\n                if (actualSquare.x === x && actualSquare.y === y) {\n                    setClosestPath([], actualSquare);\n                    return;\n                }\n\n                let square: Square = map.getSquare(x, y);\n                if(square.entity){\n                    return\n                }\n                let path = map.getPathTo(actualSquare, square, mouvementRange),\n                    lastStep = _.last(path),\n                    lastSquare = lastStep ? map.getSquare(lastStep.x, lastStep.y) : null;\n\n                if (path && path.length > 0 && path.length < actualDistanceFromHuman && lastSquare === square) {\n                    setClosestPath(path, lastSquare);\n                    return\n                }\n            }\n            function pathStepEqualsToSquare(pathStep: any, square: Square) {\n                return pathStep.x === square.x && pathStep.y === square.y;\n            }\n\n            function setClosestPath(path: Array<any>, square: Square) {\n                closerHuman = h;\n                actualDistanceFromHuman = path.length;\n                pathToGo = path;\n                moveTargetSquare = square;\n            }\n        })\n\n        return {\n            distance: actualDistanceFromHuman,\n            entity: closerHuman,\n            path: pathToGo,\n            target: moveTargetSquare\n        }\n    }\n\n\n    private goForCloserZombie(entities: Array<Entity>, map: GameMap, callback: () => void): boolean {\n        let zombie = entities.filter(e => e.teamId === this.teamId && e.id != this.id);\n        let pathToClosest = this.pathToClosestEntity(zombie, map);\n\n        if (!pathToClosest.entity) {\n            callback();\n            return false;\n        }\n\n        if (pathToClosest.distance === 0) {\n            //this.attack(closerHuman);\n            //attack\n            this.updateAccessibleTiles = false;\n            callback();\n        } else {\n            this.targetSquare = pathToClosest.target;\n            this.updateAccessibleTiles = true;\n\n            map.moveEntityFollowingPath(this, pathToClosest.path, () => callback(), () => console.error('oh ...'));\n        }\n\n        return false;\n    }\n    private lookForHumaaaans(entities: Array<Entity>, map: GameMap, callback: () => void): boolean {\n\n        let humans = entities.filter(e => e.teamId !== this.teamId);\n\n        let pathToClosest = this.pathToClosestEntity(humans, map);\n        //plus tard, il ira de manière aléatoire en favorisant le plus proche\n\n\n        if (!pathToClosest.entity) {\n            return false;\n        }\n\n        if (pathToClosest.distance === 0) {\n            this.attack(pathToClosest.entity);\n            //attack\n            this.updateAccessibleTiles = false;\n            callback();\n        } else {\n            this.targetSquare = pathToClosest.target;\n            this.updateAccessibleTiles = true;\n\n            map.moveEntityFollowingPath(this, pathToClosest.path, () => callback(), () => console.error('oh ...'));\n        }\n\n        return true;\n    }\n\n\n    public attack(target: Entity): Zombie {\n        super.attack(target);\n        this.engine.playSound('grunt');\n        this.engine.shake();\n        console.log('zombie attacks ' + target.id + target.teamId);\n        return this;\n    }\n\n    public touched(sourceEntity: Entity, damage:number): Zombie {\n        console.log('aaaargh', sourceEntity, 'hit me for', damage);\n        this.engine.playSound('grunt');\n\n        this.pv = this.pv - damage;\n\n        if(this.pv<=0){\n            console.log('aaaargh, i am really dead');\n\n            this.sprite.alive = false\n            this.sprite.visible = false\n            this.sprite.animations.stop()\n            this.square.entity = null\n            let index = _(this.team).remove(['id', this.id]).value();\n\n        }\n\n        return this;\n    }\n}\n\n\ninterface closestEntityReturn {\n    entity: Entity,\n    path: Array<any>,\n    distance: number,\n    target: Square\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/zombie.ts","import { Injectable } from '@angular/core'; \r\nimport { BaseRequestOptions, RequestOptions } from '@angular/http'; \r\n \r\n@Injectable() \r\nexport class DefaultRequestOptions extends BaseRequestOptions { \r\n \r\n  constructor() { \r\n    super(); \r\n \r\n    // Set the default 'Content-Type' header \r\n    this.headers.set('Content-Type', 'application/json'); \r\n  } \r\n} \r\n \r\nexport const requestOptionsProvider = { provide: RequestOptions, useClass: DefaultRequestOptions }; \r\n \r\n \r\n/* \r\nCopyright 2017 Google Inc. All Rights Reserved. \r\nUse of this source code is governed by an MIT-style license that \r\ncan be found in the LICENSE file at http://angular.io/license \r\n*/\n\n\n// WEBPACK FOOTER //\n// ./src/app/loader/default-request-options.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class GameService {\n\n    constructor(private http: Http) { }\n\n\n    getMapJson(mapKey: string): Observable<MapResponse> {\n        //assets/tiles/map00.json\n        return this.http.get('assets/tiles/' + mapKey + '.json').map(response => this.buildMapResponse(mapKey, response));\n    }\n\n    private buildMapResponse(mapKey: string, response: Response): MapResponse {\n        let json = response.json(),\n            tilesets: Array<any> = json.tilesets,\n            layers: Array<any> = json.layers;\n\n        return {\n            name: mapKey,\n            data: response.json(),\n            layers: layers,\n            tilesetImages: tilesets.map(s => <Tileset>{\n                url: 'assets/tiles/' + s.image,\n                key: s.name\n            })\n        };\n    }\n\n    public LoadTileMap(mapResponse: MapResponse, game: Phaser.Game): void {\n        game.load.tilemap(mapResponse.name, null, mapResponse.data, Phaser.Tilemap.TILED_JSON);\n\n        mapResponse.tilesetImages.forEach(t => {\n            game.load.image(t.key, t.url);\n        });\n    }\n\n    public create(mapResponse: MapResponse, game: Phaser.Game, group: Phaser.Group): CreatedMap {\n        let map: Phaser.Tilemap = game.add.tilemap(mapResponse.name, 16, 16);\n        mapResponse.tilesetImages.forEach(t => {\n            game.load.image(t.key, t.url);\n            map.addTilesetImage(t.key, t.key);\n        });\n\n        let layers = new Map<string, Phaser.TilemapLayer>();\n        let tilePropertyMap = new Map<number, any>();\n        mapResponse.layers.forEach(l => {\n            let layer: Phaser.TilemapLayer = map.createLayer(l.name);\n            layer.visible = l.opacity === 1;\n            layers.set(l.name, layer);\n            group.add(layer);\n        })\n\n        let tilesets: Array<any> = mapResponse.data.tilesets;\n        tilesets.map(t => {\n            return {\n                'firstgid': t.firstgid,\n                'tiles': t.tiles\n            }\n        })\n            .filter(t => t.tiles)\n            .map(t => {\n\n                let index = 0,\n                    tiles = t.tiles;\n\n\n                for (var item in tiles) {\n                    let objectgroup = tiles[item].objectgroup;\n                    if(objectgroup){\n                        tilePropertyMap.set(t.firstgid+index, objectgroup);\n                        index++;\n                    }\n                }\n            }\n            );\n\n        return {\n            map: map,\n            layers: layers,\n            tileMap: tilePropertyMap\n        };\n    }\n}\n\nexport interface CreatedMap {\n    map: Phaser.Tilemap,\n    layers: Map<string, Phaser.TilemapLayer>,\n    tileMap: Map<number, any>\n}\n\nexport interface MapResponse {\n    name: string,\n    data: any,\n    layers: Array<Layer>\n    tilesetImages: Array<Tileset>\n}\ninterface Layer {\n    name, string,\n    opacity: number\n}\ninterface Tileset {\n    url: string,\n    key: string\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/loader/game.service.ts","export default class DelayedAnimation extends Phaser.Animation {\n    _parent: any;\n    _frameData: any;\n    _frames: any;\n    _frameIndex: number;\n    isReversed: any;\n    _timeLastFrame: number;\n    _frameDiff: number;\n    _frameSkip: number;\n    _timeNextFrame: any;\n\n    private timelineDelay:number\n\n    static addToAnimations(animationManager: any, delay, name, frames, frameRate, loop, useNumericIndex?) {\n\n        frames = frames || [];\n        frameRate = frameRate || 60;\n\n        if (loop === undefined) { loop = false; }\n\n        //  If they didn't set the useNumericIndex then let's at least try and guess it\n        if (useNumericIndex === undefined)\n        {\n            if (frames && typeof frames[0] === 'number')\n            {\n                useNumericIndex = true;\n            }\n            else\n            {\n                useNumericIndex = false;\n            }\n        }\n\n        animationManager._outputFrames = [];\n\n        animationManager._frameData.getFrameIndexes(frames, useNumericIndex, animationManager._outputFrames);\n\n        let delayedAnimation = new DelayedAnimation(animationManager.game, animationManager.sprite, name, animationManager._frameData, animationManager._outputFrames, frameRate, loop);\n\n        delayedAnimation.timelineDelay = delay;\n\n        animationManager._anims[name] = delayedAnimation;\n\n\n\n        animationManager.currentAnim = animationManager._anims[name];\n\n        if (animationManager.sprite.tilingTexture)\n        {\n            animationManager.sprite.refreshTexture = true;\n        }\n\n        return animationManager._anims[name];\n\n    }\n\n\n    update(): boolean {\n\n\n\n\n\n        if (this.isPaused)\n        {\n            return false;\n        }\n\n        if (this.isPlaying && this.game.time.time >= this._timeNextFrame)\n        {\n            this._frameSkip = 1;\n\n            //  Lagging?\n            this._frameDiff = this.game.time.time - this._timeNextFrame + this.timelineDelay;\n\n            this._timeLastFrame = this.game.time.time;\n\n            if (this._frameDiff > this.delay)\n            {\n                //  We need to skip a frame, work out how many\n                this._frameSkip = Math.floor(this._frameDiff / this.delay);\n                this._frameDiff -= (this._frameSkip * this.delay);\n            }\n\n            //  And what's left now?\n            this._timeNextFrame = this.game.time.time + (this.delay - this._frameDiff);\n\n            if (this.isReversed)\n            {\n                this._frameIndex -= this._frameSkip;\n            }\n            else\n            {\n                this._frameIndex += this._frameSkip;\n            }\n\n            if (!this.isReversed && this._frameIndex >= this._frames.length || this.isReversed && this._frameIndex <= -1)\n            {\n                if (this.loop)\n                {\n                    // Update current state before event callback\n                    this._frameIndex = Math.abs(this._frameIndex) % this._frames.length;\n\n                    if (this.isReversed)\n                    {\n                        this._frameIndex = this._frames.length - 1 - this._frameIndex;\n                    }\n\n                    this.currentFrame = this._frameData.getFrame(this._frames[this._frameIndex]);\n\n                    //  Instead of calling updateCurrentFrame we do it here instead\n                    if (this.currentFrame)\n                    {\n                        this._parent.setFrame(this.currentFrame);\n                    }\n\n                    this.loopCount++;\n                    this._parent.events.onAnimationLoop$dispatch(this._parent, this);\n                    this.onLoop.dispatch(this._parent, this);\n\n                    if (this.onUpdate)\n                    {\n                        this.onUpdate.dispatch(this, this.currentFrame);\n\n                        // False if the animation was destroyed from within a callback\n                        return !!this._frameData;\n                    }\n                    else\n                    {\n                        return true;\n                    }\n                }\n                else\n                {\n                    this.complete();\n                    return false;\n                }\n            }\n            else\n            {\n                return this.updateCurrentFrame(true);\n            }\n        }\n\n        return false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/phaser/delayedAnimation.ts","import { Entity } from 'app/game/entity'\nimport { GameService, MapResponse, CreatedMap } from 'app/loader/game.service';\nimport { Observable } from 'rxjs/Observable';\nimport { Pool } from 'app/phaser/pool'\nimport { VisibilitySprite } from 'app/game/visibilitySprite'\nimport DelayedAnimation from 'app/phaser/delayedAnimation'\n\n//http://rpgmaker.su-downloads/%D0%B4%D0%BE%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D1%8F/238-pop-horror-city-character-pack-1-a\n//https://forums.rpg-akerweb.com/index.php?threads/pop-freebies.45329/\n// https://www.leshylabs.com/apps/sstool/\n\n\n/*\n<div class=\"frame ctooltip\">\n  \n    <div style=\"background: #225378\"></div>\n  \n    <div style=\"background: #1695A3\"></div>\n  \n    <div style=\"background: #ACF0F2\"></div>\n  \n    <div style=\"background: #F3FFE2\"></div>\n  \n    <div style=\"background: #EB7F00\"></div>\n  \n  \n</div>\n<div class=\"frame ctooltip\">\n  \n    <div style=\"background: #DC3522\"></div>\n  \n    <div style=\"background: #D9CB9E\"></div>\n  \n    <div style=\"background: #374140\"></div>\n  \n    <div style=\"background: #2A2C2B\"></div>\n  \n    <div style=\"background: #1E1E20\"></div>\n  </div>\n */\nexport class Engine {\n    visibleMarkerPool: Pool;\n    rangegroup: Phaser.Group;\n    visiongroup: Phaser.Group;\n    gamegroup: Phaser.Group;\n    private soundeffect: Phaser.Sound;\n    private glowTween: Phaser.Tween;\n    private glowPosition: Phaser.Point;\n    private tileMap: Map<number, any>;\n    private text: Phaser.Text;\n    private marker: Phaser.Sprite;\n    private glow: Phaser.Sprite;\n    private collisionLayer: Phaser.TilemapLayer;\n    private horizontalScroll = true;\n    private verticalScroll = true;\n    private kineticMovement = true;\n    private scroller;\n    public phaserGame: Phaser.Game;\n    private cursors: Phaser.CursorKeys;\n    //private player: Phaser.Sprite;\n    private wasd: any;\n    private speed = 300;\n    public map: Phaser.Tilemap;\n    private tween: Phaser.Tween;\n    private startX: number;\n    private startY: number;\n    public observable: Observable<string>;\n    private status: (string) => void;\n    private o;\n    private click: (point: Phaser.Point) => void;\n    private over: (point: Phaser.Point) => void;\n    private overOff: (point: Phaser.Point) => void;\n    debug: boolean = true;\n\n\n    constructor(mapName: string, private gameService: GameService) {\n        this.observable = Observable.create(o => {\n            this.o = o;\n            this.status = o.next;\n        });\n        this.gameService.getMapJson(mapName).subscribe(\n            next => this.init(next),\n            error => console.error('error loading map'),\n            () => console.log('c\\'est fini'));\n    }\n    private init(mapResponse: MapResponse) {\n        let self = this;\n\n        this.phaserGame = new Phaser.Game(1600 * window.devicePixelRatio, (window.innerHeight - 100) * window.devicePixelRatio, Phaser.WEBGL, 'game', { preload: preload, create: create, update: update }, false, false);\n\n        function preload() {\n            self.preload(mapResponse);\n        }\n        function create() {\n            self.create(mapResponse);\n        }\n        function update() {\n            self.update();\n        }\n    }\n\n    public bindClick(click: (point: Phaser.Point) => void) {\n        this.click = click;\n    }\n    public bindOver(over: (point: Phaser.Point) => void, overOff: (point: Phaser.Point) => void) {\n        this.over = over;\n        this.overOff = overOff;\n    }\n    public shake() {\n        this.phaserGame.camera.resetFX();\n        this.phaserGame.camera.shake(0.004, 100, true, Phaser.Camera.SHAKE_BOTH, true);\n        //this.phaserGame.camera.flash(0xffffff, 50, false, 0.7);\n    }\n\n    private preload(mapResponse: MapResponse) {\n\n        Phaser.Canvas.setImageRenderingCrisp(this.phaserGame.canvas);\n        //this.phaserGame.scale.scaleMode = Phaser.ScaleManager.USER_SCALE;\n        //this.phaserGame.scale.setUserScale(2, 2);\n        this.phaserGame.load.atlas('sprites', 'assets/sprites/spriteatlas/sprites.png', 'assets/sprites/spriteatlas/sprites.json', Phaser.Loader.TEXTURE_ATLAS_JSON_ARRAY);\n        this.phaserGame.load.atlas('heroes-sprites', 'assets/tiles/POPHorrorCity_GFX/Graphics/Characters/Male_Heroes.png', 'assets/tiles/POPHorrorCity_GFX/Graphics/Characters/Male_Heroes.json', Phaser.Loader.TEXTURE_ATLAS_JSON_ARRAY);\n        this.phaserGame.load.atlas('Male-Zombies-Gore', 'assets/tiles/POPHorrorCity_GFX/Graphics/Characters/Male_Zombies_Gore.png', 'assets/tiles/POPHorrorCity_GFX/Graphics/Characters/Male_Zombies_Gore.json', Phaser.Loader.TEXTURE_ATLAS_JSON_ARRAY);\n        this.phaserGame.load.atlas('markers', 'assets/tiles/POPHorrorCity_GFX/Graphics/System/markers.png', 'assets/tiles/POPHorrorCity_GFX/Graphics/System/markers.json', Phaser.Loader.TEXTURE_ATLAS_JSON_ARRAY);\n        this.gameService.LoadTileMap(mapResponse, this.phaserGame);\n        this.phaserGame.load.audio('boden', ['assets/sounds/essai.mp3']);\n        this.phaserGame.load.audio('MechDrone1', ['assets/sounds/MechDrone1.mp3']);\n        this.phaserGame.load.audio('soundeffect', ['assets/sounds/soundeffect.ogg']);\n        this.phaserGame.load.atlas('candle-glow', 'assets/tiles/POPHorrorCity_GFX/Graphics/Characters/Objects/Candle_Glow.png', 'assets/tiles/POPHorrorCity_GFX/Graphics/Characters/Objects/Candle_Glow.json', Phaser.Loader.TEXTURE_ATLAS_JSON_ARRAY);\n\n    }\n\n    create(mapResponse: MapResponse) {\n        let game: Phaser.Game = this.phaserGame;\n        let MechDrone1 = game.add.audio('MechDrone1', 1, true);\n        let soundeffect = game.add.audio('soundeffect', 0.1, true);\n        this.gamegroup = game.add.group();\n        this.rangegroup = game.add.group();\n        this.visiongroup = game.add.group();\n        let gamegroup = this.gamegroup;\n\n        MechDrone1.play();\n        MechDrone1.volume = 0.5;\n        soundeffect.volume = 0;\n\n        //à enlever\n        game.camera.setPosition(32, 32);\n\n        soundeffect.allowMultiple = true;\n        soundeffect.addMarker('shotgun', 10.15, 0.940);\n        soundeffect.addMarker('gun', 109.775, 0.550, 0.5);\n        soundeffect.addMarker('grunt', 197.618, 0.570);\n        this.soundeffect = soundeffect;\n\n        game.physics.startSystem(Phaser.Physics.ARCADE);\n\n        let createdMap: CreatedMap = this.gameService.create(mapResponse, game, this.gamegroup);\n        let collisionLayer = createdMap.layers.get('collisions');\n\n        this.map = createdMap.map;\n        this.tileMap = createdMap.tileMap;\n\n        this.collisionLayer = collisionLayer;\n        //this.map.setCollisionByExclusion([], true, this.collisionLayer);\n\n        this.collisionLayer.resizeWorld();\n\n        this.cursors = game.input.keyboard.createCursorKeys();\n        this.wasd = {\n            cameraDown: game.input.keyboard.addKey(Phaser.Keyboard.NUMPAD_2),\n            cameraUp: game.input.keyboard.addKey(Phaser.Keyboard.NUMPAD_8),\n            cameraLeft: game.input.keyboard.addKey(Phaser.Keyboard.NUMPAD_4),\n            cameraRight: game.input.keyboard.addKey(Phaser.Keyboard.NUMPAD_6),\n            topTown: game.input.keyboard.addKey(Phaser.Keyboard.END)\n        };\n\n        this.visibleMarkerPool = new Pool(game, VisibilitySprite, 200, 'visibleMarker');\n        this.marker = game.add.sprite(0, 0, 'markers');\n        gamegroup.add(this.marker);\n        this.marker.animations.add(\"blink\", [\"marker/blink1\", \"marker/blink2\"], 5, true);\n        this.marker.play(\"blink\");\n        game.physics.enable(this.marker, Phaser.Physics.ARCADE);\n\n\n        this.glow = game.add.sprite(-100, -100, 'markers');\n        gamegroup.add(this.glow);\n        this.glow.animations.add(\"glow\", [\"marker/active_entity\"], 5, true);\n        this.glow.play(\"glow\");\n        game.physics.enable(this.glow, Phaser.Physics.ARCADE);\n\n\n        let lastLayer = createdMap.layers.get('example sprite');\n        lastLayer.inputEnabled = true;\n        lastLayer.events.onInputDown.add(this.clickListener, this);\n\n        if (this.debug) {\n            this.text = this.phaserGame.add.text(-100, -100, '', null);\n        }\n\n        this.o.next('ok');\n        //this.gamegroup.scale.x = 2;\n        //this.gamegroup.scale.y = 2;\n    }\n    public removeAllAccessibleTiles() {\n        this.rangegroup.removeAll();\n    }\n\n    public addAccessibleTiles(tiles: Array<Phaser.Point>) {\n        this.removeAllAccessibleTiles();\n        tiles.forEach(tile => {\n            let tileSprite = this.phaserGame.add.sprite(tile.x, tile.y, 'markers');\n            this.rangegroup.add(tileSprite);\n            tileSprite.animations.add(\"glow\", [\"marker/accessible_tile\"], 5, true);\n            tileSprite.play(\"glow\");\n        }\n        );\n    }\n\n\n    mapVisibleTileCount: Map<string, number> = new Map();\n    mapVisibleTile: Map<string, Phaser.Sprite> = new Map();\n\n    public removeVisibleTiles(tilesKey: Array<string>) {\n        tilesKey.forEach(tileKey => {\n            if (this.mapVisibleTileCount.has(tileKey)) {\n                let count = 0;\n                this.mapVisibleTileCount.set(tileKey, count);\n                this.mapVisibleTile.get(tileKey).alive = false;\n                this.mapVisibleTile.get(tileKey).visible = false;\n            }\n        });\n    }\n    public removeAllVisibleTiles() {\n        this.mapVisibleTileCount = new Map();\n        this.mapVisibleTile = new Map();\n        this.visibleMarkerPool.sprites.forEach(sprite => {\n            sprite.alive = false;\n            sprite.visible = false;\n        });\n    }\n    public addVisibleTiles(oldTiles: Array<Phaser.Point>, tiles: Array<Phaser.Point>) {\n        //console.time('addVisibleTiles');\n\n        let oldKeysToDelete: Set<string> = new Set(),\n            newKeys: Set<string> = new Set();\n\n        tiles.forEach(tile => newKeys.add(tile.x + ':' + tile.y));\n        oldTiles.forEach(tile => {\n            if (!newKeys.has(tile.x + ':' + tile.y)) {\n                oldKeysToDelete.add(tile.x + ':' + tile.y)\n            }\n        });\n\n        this.removeVisibleTiles(Array.from(oldKeysToDelete));\n\n        tiles.forEach(tile => {\n            let tileKey = tile.x + ':' + tile.y;\n            if (!this.mapVisibleTileCount.has(tileKey)) {\n                this.mapVisibleTileCount.set(tileKey, 0);\n            }\n\n            let count = this.mapVisibleTileCount.get(tileKey);\n\n            if (count < 1) {\n                this.mapVisibleTile.set(tileKey, this.visibleMarkerPool.createNew(tile.x, tile.y));\n            }\n\n\n            if (!oldKeysToDelete.has(tileKey)) {\n                this.mapVisibleTileCount.set(tileKey, count + 1);\n            }\n        }\n        );\n        //console.timeEnd(\"addVisibleTiles\");\n    }\n\n\n    public createHuman(position: Phaser.Point): Phaser.Sprite {\n        let human = this.phaserGame.add.sprite(position.x, position.y - 32, 'heroes-sprites');\n        human.animations.add(\"down\", [\"sprite1\", \"sprite2\", \"sprite3\"], 5, true);\n        human.animations.add(\"left\", [\"sprite13\", \"sprite14\", \"sprite15\"], 5, true);\n        human.animations.add(\"right\", [\"sprite25\", \"sprite26\", \"sprite27\"], 5, true);\n        human.animations.add(\"up\", [\"sprite37\", \"sprite38\", \"sprite39\"], 5, true);\n        human.animations.add(\"stand-down\", [\"sprite2\"], 5, true);\n        human.play(\"stand-down\");\n        this.gamegroup.add(human);\n        return human;\n    }\n\n\n    public createZombie(position: Phaser.Point, zombieType: string): Phaser.Sprite {\n        let zombie = this.phaserGame.add.sprite(position.x, position.y - 32, 'Male-Zombies-Gore'),\n            framerate = 3;\n        zombie.smoothed = false;\n        zombie.scale.setTo(1, this.phaserGame.rnd.realInRange(0.9, 1.2))\n        let delay = this.phaserGame.rnd.integerInRange(0, 50);\n\n        //zombie.animations.add(\"down\", [zombieType + \"-down-1\", zombieType + \"-down-2\", zombieType + \"-down-3\", zombieType + \"-down-2\"], framerate, true);\n        \n        DelayedAnimation.addToAnimations(zombie.animations, delay, \"down\", [zombieType + \"-down-1\", zombieType + \"-down-2\", zombieType + \"-down-3\", zombieType + \"-down-2\"], framerate, true);\n\n        zombie.animations.add(\"left\", [zombieType + \"-left-1\", zombieType + \"-left-2\", zombieType + \"-left-3\"], framerate, true);\n        zombie.animations.add(\"right\", [zombieType + \"-right-1\", zombieType + \"-right-2\", zombieType + \"-right-3\"], framerate, true);\n        zombie.animations.add(\"up\", [zombieType + \"-up-1\", zombieType + \"-up-2\", zombieType + \"-up-3\"], framerate, true);\n        zombie.animations.add(\"masked-down\", [\"00-down-1\", \"00-down-2\", \"00-down-3\"], framerate, true);\n        zombie.animations.add(\"masked-left\", [\"00-left-1\", \"00-left-2\", \"00-left-3\"], framerate, true);\n        zombie.animations.add(\"masked-right\", [\"00-right-1\", \"00-right-2\", \"00-right-3\"], framerate, true);\n        zombie.animations.add(\"masked-up\", [\"00-up-1\", \"00-up-2\", \"00-up-3\"], framerate, true);\n\n\n        zombie.play(\"down\");\n        \n        let frameIndex = this.phaserGame.rnd.integerInRange(0,zombie.animations.currentAnim.frameTotal);\n\n\n\n        zombie.animations.currentAnim.setFrame(frameIndex);\n\n        this.gamegroup.add(zombie);\n        return zombie;\n    }\n\n    public playSound(soundName: string) {\n        this.soundeffect.volume = 0.5;\n\n        this.soundeffect.play(soundName);\n    }\n\n    private clickListener() {\n        let marker = this.marker,\n            targetPoint: Phaser.Point = new Phaser.Point();\n\n        targetPoint.x = marker.x;\n        targetPoint.y = marker.y;\n\n        this.click(targetPoint);\n    }\n\n    private overOffListener() {\n        let marker = this.marker,\n            targetPoint: Phaser.Point = new Phaser.Point();\n\n        targetPoint.x = marker.x;\n        targetPoint.y = marker.y;\n        this.overOff(targetPoint);\n    }\n    private overListener() {\n        let marker = this.marker,\n            targetPoint: Phaser.Point = new Phaser.Point();\n\n        targetPoint.x = marker.x;\n        targetPoint.y = marker.y;\n\n        this.over(targetPoint);\n    }\n\n    public setGlowPosition(position: Phaser.Point) {\n        this.phaserGame.tweens.removeAll();\n        this.glow.x = position.x;\n        this.glow.y = position.y;\n\n    }\n\n    public moveGlowPosition(position: Phaser.Point) {\n        let game = this.phaserGame;\n\n        if (this.glowTween && this.glowTween.isRunning) {\n            this.glowTween.stop();\n        }\n\n        this.glowTween = game.add.tween(this.glow).to({ x: position.x, y: position.y }, 100, Phaser.Easing.Linear.None, true);\n        this.glowTween.onComplete.add(() => this.glowTween.stop(), this);\n    }\n    public moveTo(sprite: Phaser.Sprite, x: number, y: number, callback: () => void) {\n\n        let game = this.phaserGame;\n\n        if (this.tween && this.tween.isRunning) {\n            this.tween.stop();\n        }\n        this.tween = game.add.tween(sprite).to({ x: x, y: y - 32 }, 100, Phaser.Easing.Linear.None, true);\n        this.tween.onComplete.add(() => this.onComplete(sprite, callback), this);\n    }\n\n    public lookTo(sprite: Phaser.Sprite, animationLooking: string): void {\n        sprite.play(animationLooking);\n    }\n\n    private onComplete(sprite: Phaser.Sprite, callback: () => void) {\n        callback();\n    }\n\n    private getTopDownCameraPositionY(): number {\n        let game = this.phaserGame,\n            camera = game.camera;\n        return (camera.bounds.bottom) - (camera.height / 2)\n    }\n\n    private updateCamera() {\n        let game = this.phaserGame,\n            camera = game.camera,\n            activePointer = game.input.activePointer,\n            cameraPosition = camera.position,\n            livezone = 32,\n            cameraStep = 16;\n\n        if (activePointer.x <= livezone) {\n            this.phaserGame.camera.setPosition(cameraPosition.x - cameraStep, cameraPosition.y);\n        }\n        else if (activePointer.y <= livezone) {\n            this.phaserGame.camera.setPosition(cameraPosition.x, cameraPosition.y - cameraStep);\n        }\n        else if (activePointer.x >= camera.width - livezone) {\n            this.phaserGame.camera.setPosition(cameraPosition.x + cameraStep, cameraPosition.y);\n        }\n        else if (activePointer.y >= camera.height - livezone) {\n            let max = Math.min(cameraPosition.y + cameraStep, this.getTopDownCameraPositionY());\n            this.phaserGame.camera.setPosition(cameraPosition.x, max);\n        }\n    }\n\n    public isPositionCollidable(position: Phaser.Point): boolean {\n        let tile = this.getTileAtPosition(position);\n        return (tile && tile.properties.cantGo);\n    }\n\n    public getPositionCover(position: Phaser.Point): number {\n        let tile = this.getTileAtPosition(position);\n        return tile && tile.properties.cover ? tile.properties.cover : 0;\n    }\n    public getPositionMask(position: Phaser.Point): boolean {\n        let tile = this.getTileAtPosition(position);\n        return tile && tile.properties.mask ? true : false;\n    }\n\n    private getTileAtPosition(position: Phaser.Point): Phaser.Tile {\n        return this.map.getTileWorldXY(position.x, position.y, 16, 16, this.collisionLayer);\n    }\n\n    private overTimer: eventTimer = {\n        key: '',\n        time: -1,\n        tick: false,\n        wasOver: false\n    }\n\n    private setMarker() {\n        let marker: Phaser.Sprite = this.marker,\n            tilePointBelowPointer: Phaser.Point = this.pointToTilePosition(); // get tile coordinate below activePointer\n\n        if (this.isPositionCollidable(tilePointBelowPointer)) {\n            // do something if you want\n        } else {\n            marker.x = tilePointBelowPointer.x;\n            marker.y = tilePointBelowPointer.y;\n            let key = (marker.x / 32) + ':' + (marker.y / 32),\n                timestamp = new Date().getTime();\n            let duration = timestamp - this.overTimer.time;\n\n            if (this.overTimer.key == key) {\n                if (duration > 300) {\n                    if (!this.overTimer.tick) {\n                        this.overListener();\n                        this.overTimer.tick = true;\n                        this.overTimer.wasOver = true;\n                        if (this.debug) {\n                            this.text.destroy();\n                            this.text = this.phaserGame.add.text(marker.x, marker.y, key, null);\n\n                            this.text.font = 'Roboto';\n                            this.text.fontSize = 12;\n                        }\n                    }\n                } else {\n                    this.text.destroy();\n                    this.overTimer.tick = false;\n                }\n            } else {\n                this.text.destroy();\n                this.overTimer.key = key;\n                this.overTimer.time = timestamp;\n                this.overTimer.tick = false;\n                if (this.overTimer.wasOver) {\n                    this.overOffListener();\n                    this.overTimer.wasOver = false;\n                }\n            }\n\n        }\n\n    }\n\n    private pointToTilePosition(): Phaser.Point {\n        let game = this.phaserGame,\n            camera = game.camera,\n            activePointer = game.input.activePointer,\n            cameraPosition = camera.position,\n            tilesetSize = 32,\n            point = new Phaser.Point();\n        point.x = tilesetSize * Math.round((activePointer.x + cameraPosition.x - 16) / tilesetSize);\n        point.y = tilesetSize * Math.round((activePointer.y + cameraPosition.y - 16) / tilesetSize);\n        return point;\n    }\n    private handlerKeyBoard() {\n        let camera = this.phaserGame.camera,\n            cameraPosition = camera.position;\n        let noDirectionPressedflag = true;\n        if (this.wasd.cameraDown.isDown) {\n            this.phaserGame.camera.setPosition(cameraPosition.x, cameraPosition.y + 5);\n        }\n        if (this.wasd.cameraLeft.isDown) {\n            this.phaserGame.camera.setPosition(cameraPosition.x - 5, cameraPosition.y);\n        }\n        if (this.wasd.cameraRight.isDown) {\n            this.phaserGame.camera.setPosition(cameraPosition.x + 5, cameraPosition.y);\n        }\n        if (this.wasd.cameraUp.isDown) {\n            this.phaserGame.camera.setPosition(cameraPosition.x, cameraPosition.y - 5);\n        }\n        if (this.wasd.topTown.isDown) {\n            this.phaserGame.camera.setPosition(cameraPosition.x, (camera.bounds.bottom) - (camera.height / 2));\n        }\n\n        if (noDirectionPressedflag) {\n            //this.player.body.velocity.set(0);\n        }\n    }\n\n    update() {\n        this.setMarker();\n        this.updateCamera();\n        this.handlerKeyBoard();\n\n\n    }\n}\n\ninterface eventTimer {\n    key: string\n    time: number\n    tick: boolean\n    wasOver: boolean\n} \n\n\n\n// WEBPACK FOOTER //\n// ./src/app/phaser/engine.ts","import { Spawnable } from 'app/phaser/spawnable'\n\nexport class Pool extends Phaser.Group {\n\n    public sprites: Array<Phaser.Sprite>;\n\n    constructor(game: Phaser.Game, private spriteType: typeof Spawnable, instances: number, name: string) {\n        super(game, game.world, name, false, true, Phaser.Physics.ARCADE);\n        this.initializePool(instances);\n    }\n\n    private initializePool(instances) {\n        this.sprites = new Array();\n        if (instances <= 0) {\n            return;\n        } // We don't need to add anything to the group\n        for (var i = 0; i < instances; i++) {\n            let sprite = this.add(new this.spriteType(this.game)); // Add new sprite\n            sprite.poolId = i;\n            this.sprites.push(sprite);\n        }\n    }\n\n    public createNew(x: number, y: number, data?: Object) {\n        let obj: Spawnable = this.getFirstDead(false);\n        if (!obj) {\n            console.log('createNew');\n            obj = new this.spriteType(this.game);\n            this.add(obj, true);\n        }\n        obj.spawn(x, y, data);\n        return obj;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/phaser/pool.ts","\nexport class Spawnable extends Phaser.Sprite {\n\n    data:Object\n\n    constructor(game: Phaser.Game, x?: number, y?: number, texture?: string) {\n        super(game, x, y, texture);\n    }\n\n    spawn(x: number, y: number, data?: any) {\n        this.reset(x, y);\n        this.data = data;\n        this.exists = true;\n        this.alive = true;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/phaser/spawnable.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".game__canvas__background{\\n    position: relative;\\n}\\n.game__canvas__sprites{\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n}\\n.game__canvas__background,\\n.game__canvas__sprites{\\n     -webkit-transform: translateZ(0);\\n     transform: translateZ(0);\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 472\n// module chunks = 1","module.exports = \"<div style=\\\"position: relative\\\">\\n    <div id=\\\"game\\\" class=\\\"game__canvas__sprites\\\"></div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 476\n// module chunks = 1"],"sourceRoot":""}